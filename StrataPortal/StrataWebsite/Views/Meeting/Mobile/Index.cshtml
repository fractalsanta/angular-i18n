@model Rockend.iStrata.StrataWebsite.Model.MeetingModel
@using Rockend.iStrata.StrataWebsite.Helpers
<div data-role="header" data-position="inline" data-theme="c">
    <h2>Meeting Details</h2>
</div>
<div class="ui-content">
    <div class="mainContent">
        <div class="menuIconContainer" style="margin-bottom: 16px;">
            <a href="@Url.Action("Menu", "Mobile")" data-direction="reverse" data-role="none" data-transition="slide" data-ajax="false">
                <img src="/Content/Images/menuIcon.jpg" />
            </a>
        </div>
        <div class="section">
            @if (Model.UserSession.LotNames.Count > 1)
            {
                @Html.Raw(Html.StrataDropdown(Model.UserSession.LotNames, Model.CurrentLotIndex, ((d, i) => Url.Action("Index", new { index = i })), "ownerCorpIndex"))
            }
            else
            {
                <h3 class="plan">@Model.UserSession.LotNames[0].Name</h3>
                <input type="hidden" id="ownerCorpIndex" value = "@Model.CurrentLotIndex" />
            }
            <h3>Scheduled Meetings</h3>
            <div class="grid-wrapper-mobile">
            @if (Model.Meetings == null || Model.Meetings.Count == 0)
            {
                <div class="grid-item-mobile">
                    <table class="meeting-inner-table-mobile">
                        <tr>
                            <td>No meetings scheduled</td>
                        </tr>
                    </table>
                </div>
            }

            @foreach (var meeting in Model.Meetings)
            {
                <div class="grid-item-mobile cf">
                    <h1 class="meeting-header-mobile">@meeting.Description</h1>
                    <table class="meeting-inner-table-mobile">
                        <tr>
                            <td>Meeting Date</td>
                            <td>@string.Format("{0} @ {1}", meeting.MeetingDate.ToLocalTime().ToShortDateString(), meeting.MeetingTime)</td>
                        </tr>
                        @if (meeting.AllowVoting)
                        {
                            <tr>
                                <td>Voting Cut-off Date</td>
                                <td>@string.Format("{0} @ {1}", meeting.VotingCutOffDate.ToLocalTime().ToShortDateString(), meeting.VotingCutOffTime)</td>
                            </tr>
                        }
                        <tr>
                            <td>Meeting Venue</td>
                            <td>@Model.VenuesMeetingVenues(meeting)</td>
                        </tr>
                        <tr>
                            <td>Strata Manager</td>
                            <td>@meeting.Manager</td>
                        </tr>
                        @if (meeting.AllowVoting && Model.IsVotingClosed(meeting))
                        {
                            <tr>
                                <td colspan="2" align="center">
                                    <b>This meeting is now closed for voting</b>
                                </td>
                            </tr>
                        }
                        @if (meeting.AllowVoting)
                        {
                            <tr>
                                <td></td>
                                <td align="right">
                                    @if (!Model.IsVotingClosed(meeting))
                                    {
                                        @Html.ActionLink("Vote", "Vote", "Meeting", new { index = Model.CurrentLotIndex, meetingRegisterId = meeting.MeetingRecordID }, new { @class = "coolButton" })
                                    }
                                    else
                                    {
                                        <a href="#" class="coolButton disabled" disabled="disabled">Vote</a>
                                    }
                                </td>
                            </tr>
                            if (Model.VoteSubmittedDate.HasValue && (Model.SubmittedMeetingRegisterId.Value == meeting.MeetingRecordID))
                            {
                                <tr>
                                    <td></td>
                                    <td align="right">
                                        Votes submitted on <span id="submittedDate"></span>
                                    </td>
                                </tr>
                                if (@Model.VoteSubmittedDate.HasValue)
                                {
                                    <script type="text/javascript">
                                    var voteSubmittedDate = new Date();
                                    $('#submittedDate').html(voteSubmittedDate.toDateString() + ' ' + voteSubmittedDate.toLocaleTimeString());
                                    </script>
                                }
                            }
                        }
                    </table>
                </div>
            }
            </div>
        </div>
        <br />
        <div class="section">
            <h3>Past Meetings</h3>
            @if (Model.PastMeetings == null || Model.PastMeetings.Count == 0)
            {
                <div class="grid-item-mobile">
                    <table class="meeting-inner-table-mobile">
                        <tr>
                            <td>No meetings scheduled</td>
                        </tr>
                    </table>
                </div>
            }

            @foreach (var pastMeeting in Model.PastMeetings)
            {
                <div class="grid-item-mobile">
                    <h1 class="meeting-header=mobile">@pastMeeting.Description</h1>
                    <table class="meeting-inner-table-mobile">
                        <tr>
                            <td>Meeting Date</td>
                            <td>@string.Format("{0} @ {1}", pastMeeting.MeetingDate.ToLocalTime().ToShortDateString(), pastMeeting.MeetingTime)</td>
                        </tr>
                        <tr>
                            <td>Meeting Venue</td>
                            <td>@Model.VenuesMeetingVenues(pastMeeting)</td>
                        </tr>
                        <tr>
                            <td>Strata Manager</td>
                            <td>@pastMeeting.Manager</td>
                        </tr>
                    </table>
                </div>
            }
        </div>
        <br />
        @Html.ActionLink("Contact Manager", "UpdateRequestForm", "Agency", new { subject = "Meeting Query", heading = "Contact my Manager" }, new { @class = "coolButton", style = "float: left; width: 145px; height: 29px; vertical-align: middle; padding-top: 6px;" })
    </div>
</div>
