@model Rockend.iStrata.StrataWebsite.Model.MeetingModel
@using Rockend.iStrata.StrataWebsite.Helpers

@section headTagsSection
{
    <style>
        .meeting td
        {
            padding: 4px;
            padding-left: 18px;
        }
        .meeting td h2
        {
            margin-left: -15px;
        }
        .meeting td h3
        {
            margin-left: -10px;
        }
        .meetingHeader 
        {
            border-bottom: solid 1px #999;
        }
    </style>
    @if (@Model.VoteSubmittedDate.HasValue)
    {
    <script type="text/javascript">
        $(document).ready(function () {
            var voteSubmittedDate = new Date();
            $('#submittedDate').html(voteSubmittedDate.toDateString() + ' ' + voteSubmittedDate.toLocaleTimeString());
        });
    </script>
    }
}
<h1>Meeting Details</h1>
@if (Model.UserSession.LotNames.Count > 1)
{
    @Html.Raw(Html.StrataDropdown(Model.UserSession.LotNames, Model.CurrentLotIndex, ((d, i) => Url.Action("Index", new { index = i })), "ownerCorpIndex"))
}
else
{
    <h2 style="border: none;">@Model.UserSession.LotNames[0].Name</h2>
    <input type="hidden" id="ownerCorpIndex" value = "@Model.CurrentLotIndex" />
}
<h2 class="meetingHeader">Scheduled Meetings</h2>
@if (Model.Meetings != null && Model.Meetings.Count > 0)
{
    foreach (var meeting in Model.Meetings)
    {        
        <div class="grid-item">
            <h1 class="meeting-header">@meeting.Description</h1>
            <table class="meeting-inner-table">
                <tr>
                    <td width="20%">Meeting Date</td>
                    <td>@string.Format("{0} @ {1}", meeting.MeetingDate.ToLocalTime().ToShortDateString(), meeting.MeetingTime)</td>
                </tr>
                @if (meeting.AllowVoting)
                {
                <tr>
                    <td>Voting Cut-off Date</td>
                    <td>@string.Format("{0} @ {1}", meeting.VotingCutOffDate.ToLocalTime().ToShortDateString(), meeting.VotingCutOffTime)</td>
                </tr>
                }
                <tr>
                    <td>Meeting Venue</td>
                    <td>@Model.VenuesMeetingVenues(meeting)</td>
                </tr>
                <tr>
                    <td>Strata Manager</td>
                    <td>@meeting.Manager</td>
                </tr>
                @if (meeting.AllowVoting && Model.IsVotingClosed(meeting))
                {
                    <tr>
                        <td colspan="2" align="center">
                            <strong>This meeting is now closed for voting</strong>
                        </td>
                    </tr>                    
                }                
                @if (meeting.AllowVoting)
                {
                    <tr>
                        <td></td>
                        <td align="right">
                            @if (!Model.IsVotingClosed(meeting))
                            {
                                @Html.ActionLink("Vote", "Vote", "Meeting", new { index = Model.CurrentLotIndex, meetingRegisterId = meeting.MeetingRecordID }, new { @class = "coolButton" })
                            }
                            else
                            {
                                <a href="#" class="coolButton disabled" disabled="disabled">Vote</a>
                            }
                        </td>
                    </tr>
                    if (Model.VoteSubmittedDate.HasValue && (Model.SubmittedMeetingRegisterId.Value == meeting.MeetingRecordID))
                    {
                        <tr>
                            <td></td>
                            <td align="right">
                                Votes submitted on <span id="submittedDate"></span>
                            </td>
                        </tr>
                    }
                }
            </table>                                   
        </div>
    }
}
<h2 class="meetingHeader">Past Meetings</h2>
<div class="cf">
    @if (Model.PastMeetings != null && Model.PastMeetings.Count > 0)
    {
        foreach (var meeting in Model.PastMeetings)
        {

            <div class="grid-item">
                <h1 class="meeting-header">@meeting.Description</h1>
                <table class="meeting-inner-table">
                    <tr>
                        <td width="20%">Meeting Date</td>
                        <td>@string.Format("{0} @ {1}", meeting.MeetingDate.ToLocalTime().ToShortDateString(), meeting.MeetingTime)</td>
                    </tr>
                    <tr>
                        <td>Meeting Venue</td>
                        <td>@Model.VenuesMeetingVenues(meeting)</td>
                    </tr>
                    <tr>
                        <td>Strata Manager</td>
                        <td>@meeting.Manager</td>
                    </tr>
                </table>
            </div>
        }
    }
    else
    {
        <table cellpadding="6" class="meeting">
            <tr>
                <td><h3>No meetings scheduled</h3></td>
            </tr>
        </table>
    }
</div>
@Html.ActionLink("Contact Manager", "UpdateRequestForm", "Agency", new { subject = "Meeting Query", heading = "Contact my Manager" }, new { @class = "coolButton", style = "float: left; width: 145px; height: 30px; vertical-align: middle; padding-top: 6px;" })