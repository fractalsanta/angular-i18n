#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Communicator.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class RestCentral : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insert__RefactorLog(__RefactorLog instance);
    partial void Update__RefactorLog(__RefactorLog instance);
    partial void Delete__RefactorLog(__RefactorLog instance);
    partial void InsertActivation(Activation instance);
    partial void UpdateActivation(Activation instance);
    partial void DeleteActivation(Activation instance);
    partial void InsertDataDictionary(DataDictionary instance);
    partial void UpdateDataDictionary(DataDictionary instance);
    partial void DeleteDataDictionary(DataDictionary instance);
    partial void InsertUserType(UserType instance);
    partial void UpdateUserType(UserType instance);
    partial void DeleteUserType(UserType instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertScheduleParameter(ScheduleParameter instance);
    partial void UpdateScheduleParameter(ScheduleParameter instance);
    partial void DeleteScheduleParameter(ScheduleParameter instance);
    partial void InsertStaticScheduleParameter(StaticScheduleParameter instance);
    partial void UpdateStaticScheduleParameter(StaticScheduleParameter instance);
    partial void DeleteStaticScheduleParameter(StaticScheduleParameter instance);
    partial void InsertAgentContent(AgentContent instance);
    partial void UpdateAgentContent(AgentContent instance);
    partial void DeleteAgentContent(AgentContent instance);
    partial void InsertAgencyAccess(AgencyAccess instance);
    partial void UpdateAgencyAccess(AgencyAccess instance);
    partial void DeleteAgencyAccess(AgencyAccess instance);
    partial void InsertServiceAgencyApplication(ServiceAgencyApplication instance);
    partial void UpdateServiceAgencyApplication(ServiceAgencyApplication instance);
    partial void DeleteServiceAgencyApplication(ServiceAgencyApplication instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertUserLogin(UserLogin instance);
    partial void UpdateUserLogin(UserLogin instance);
    partial void DeleteUserLogin(UserLogin instance);
    partial void InsertHit(Hit instance);
    partial void UpdateHit(Hit instance);
    partial void DeleteHit(Hit instance);
    partial void InsertSpecialAppKey(SpecialAppKey instance);
    partial void UpdateSpecialAppKey(SpecialAppKey instance);
    partial void DeleteSpecialAppKey(SpecialAppKey instance);
    partial void InsertStaticSchedule(StaticSchedule instance);
    partial void UpdateStaticSchedule(StaticSchedule instance);
    partial void DeleteStaticSchedule(StaticSchedule instance);
    partial void InsertAdminSetting(AdminSetting instance);
    partial void UpdateAdminSetting(AdminSetting instance);
    partial void DeleteAdminSetting(AdminSetting instance);
    partial void InsertRwacDeploy(RwacDeploy instance);
    partial void UpdateRwacDeploy(RwacDeploy instance);
    partial void DeleteRwacDeploy(RwacDeploy instance);
    partial void InsertAgencyInfo(AgencyInfo instance);
    partial void UpdateAgencyInfo(AgencyInfo instance);
    partial void DeleteAgencyInfo(AgencyInfo instance);
    partial void InsertAgencyInfoMeta(AgencyInfoMeta instance);
    partial void UpdateAgencyInfoMeta(AgencyInfoMeta instance);
    partial void DeleteAgencyInfoMeta(AgencyInfoMeta instance);
    partial void InsertAgencyApplication(AgencyApplication instance);
    partial void UpdateAgencyApplication(AgencyApplication instance);
    partial void DeleteAgencyApplication(AgencyApplication instance);
    partial void InsertRockendAction(RockendAction instance);
    partial void UpdateRockendAction(RockendAction instance);
    partial void DeleteRockendAction(RockendAction instance);
    #endregion
		
		
		public RestCentral(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestCentral(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestCentral(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestCentral(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@__RefactorLog> @__RefactorLog
		{
			get
			{
				return this.GetTable<@__RefactorLog>();
			}
		}
		
		public System.Data.Linq.Table<Activation> Activation
		{
			get
			{
				return this.GetTable<Activation>();
			}
		}
		
		public System.Data.Linq.Table<DataDictionary> DataDictionary
		{
			get
			{
				return this.GetTable<DataDictionary>();
			}
		}
		
		public System.Data.Linq.Table<UserType> UserType
		{
			get
			{
				return this.GetTable<UserType>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleParameter> ScheduleParameters
		{
			get
			{
				return this.GetTable<ScheduleParameter>();
			}
		}
		
		public System.Data.Linq.Table<StaticScheduleParameter> StaticScheduleParameters
		{
			get
			{
				return this.GetTable<StaticScheduleParameter>();
			}
		}
		
		public System.Data.Linq.Table<AgentContent> AgentContents
		{
			get
			{
				return this.GetTable<AgentContent>();
			}
		}
		
		public System.Data.Linq.Table<AgencyAccess> AgencyAccesses
		{
			get
			{
				return this.GetTable<AgencyAccess>();
			}
		}
		
		public System.Data.Linq.Table<ServiceAgencyApplication> ServiceAgencyApplications
		{
			get
			{
				return this.GetTable<ServiceAgencyApplication>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<UserLogin> UserLogins
		{
			get
			{
				return this.GetTable<UserLogin>();
			}
		}
		
		public System.Data.Linq.Table<Hit> Hits
		{
			get
			{
				return this.GetTable<Hit>();
			}
		}
		
		public System.Data.Linq.Table<SpecialAppKey> SpecialAppKeys
		{
			get
			{
				return this.GetTable<SpecialAppKey>();
			}
		}
		
		public System.Data.Linq.Table<StaticSchedule> StaticSchedules
		{
			get
			{
				return this.GetTable<StaticSchedule>();
			}
		}
		
		public System.Data.Linq.Table<AdminSetting> AdminSettings
		{
			get
			{
				return this.GetTable<AdminSetting>();
			}
		}
		
		public System.Data.Linq.Table<RwacDeploy> RwacDeploys
		{
			get
			{
				return this.GetTable<RwacDeploy>();
			}
		}
		
		public System.Data.Linq.Table<AgencyInfo> AgencyInfos
		{
			get
			{
				return this.GetTable<AgencyInfo>();
			}
		}
		
		public System.Data.Linq.Table<AgencyInfoMeta> AgencyInfoMetas
		{
			get
			{
				return this.GetTable<AgencyInfoMeta>();
			}
		}
		
		public System.Data.Linq.Table<AgencyApplication> AgencyApplications
		{
			get
			{
				return this.GetTable<AgencyApplication>();
			}
		}
		
		public System.Data.Linq.Table<RockendAction> RockendActions
		{
			get
			{
				return this.GetTable<RockendAction>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateLastCheckedSchedulesDate")]
		public int UpdateLastCheckedSchedulesDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastCheckedSchedulesDate", DbType="DateTimeOffset")] System.Nullable<System.DateTimeOffset> lastCheckedSchedulesDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastCheckedSchedulesDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAppKeysWithUpdatedSchedule")]
		public ISingleResult<GetAppKeysWithUpdatedScheduleResult> GetAppKeysWithUpdatedSchedule([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTimeOffsetNow", DbType="DateTimeOffset")] ref System.Nullable<System.DateTimeOffset> dateTimeOffsetNow)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateTimeOffsetNow);
			dateTimeOffsetNow = ((System.Nullable<System.DateTimeOffset>)(result.GetParameterValue(0)));
			return ((ISingleResult<GetAppKeysWithUpdatedScheduleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="rmh.CheckAgencyGUIDAndSetRWACVersion")]
		public ISingleResult<CheckAgencyGUIDAndSetRWACVersionResult> CheckAgencyGUIDAndSetRWACVersion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AgencyGUID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> agencyGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplicationKey", DbType="Int")] System.Nullable<int> applicationKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplicationCode", DbType="NVarChar(2)")] string applicationCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplicationDescription", DbType="NVarChar(200)")] string applicationDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialNumber", DbType="NVarChar(20)")] string serialNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Version", DbType="Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AgencyName", DbType="NVarChar(200)")] string agencyName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RWACVersion", DbType="Int")] System.Nullable<int> rWACVersion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AppmhVersion", DbType="Int")] System.Nullable<int> appmhVersion)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), agencyGUID, applicationKey, applicationCode, applicationDescription, serialNumber, version, agencyName, rWACVersion, appmhVersion);
			return ((ISingleResult<CheckAgencyGUIDAndSetRWACVersionResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.__RefactorLog")]
	public partial class @__RefactorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OperationKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOperationKeyChanging(System.Guid value);
    partial void OnOperationKeyChanged();
    #endregion
		
		public @__RefactorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OperationKey
		{
			get
			{
				return this._OperationKey;
			}
			set
			{
				if ((this._OperationKey != value))
				{
					this.OnOperationKeyChanging(value);
					this.SendPropertyChanging();
					this._OperationKey = value;
					this.SendPropertyChanged("OperationKey");
					this.OnOperationKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activation")]
	public partial class Activation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivationId;
		
		private int _AgencyApplicationID;
		
		private string _MachineName;
		
		private bool _IsActive;
		
		private System.DateTime _Created;
		
		private System.Nullable<System.DateTime> _Updated;
		
		private EntityRef<AgencyApplication> _AgencyApplication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivationIdChanging(int value);
    partial void OnActivationIdChanged();
    partial void OnAgencyApplicationIDChanging(int value);
    partial void OnAgencyApplicationIDChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedChanged();
    #endregion
		
		public Activation()
		{
			this._AgencyApplication = default(EntityRef<AgencyApplication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActivationId
		{
			get
			{
				return this._ActivationId;
			}
			set
			{
				if ((this._ActivationId != value))
				{
					this.OnActivationIdChanging(value);
					this.SendPropertyChanging();
					this._ActivationId = value;
					this.SendPropertyChanged("ActivationId");
					this.OnActivationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyApplicationID", DbType="Int NOT NULL")]
		public int AgencyApplicationID
		{
			get
			{
				return this._AgencyApplicationID;
			}
			set
			{
				if ((this._AgencyApplicationID != value))
				{
					if (this._AgencyApplication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._AgencyApplicationID = value;
					this.SendPropertyChanged("AgencyApplicationID");
					this.OnAgencyApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AgencyApplication_Activation", Storage="_AgencyApplication", ThisKey="AgencyApplicationID", OtherKey="AgencyApplicationID", IsForeignKey=true)]
		public AgencyApplication AgencyApplication
		{
			get
			{
				return this._AgencyApplication.Entity;
			}
			set
			{
				AgencyApplication previousValue = this._AgencyApplication.Entity;
				if (((previousValue != value) 
							|| (this._AgencyApplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AgencyApplication.Entity = null;
						previousValue.Activations.Remove(this);
					}
					this._AgencyApplication.Entity = value;
					if ((value != null))
					{
						value.Activations.Add(this);
						this._AgencyApplicationID = value.AgencyApplicationID;
					}
					else
					{
						this._AgencyApplicationID = default(int);
					}
					this.SendPropertyChanged("AgencyApplication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataDictionary")]
	public partial class DataDictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DataDictionaryID;
		
		private int _Version;
		
		private string _Dictionary;
		
		private System.Data.Linq.Binary _TStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataDictionaryIDChanging(int value);
    partial void OnDataDictionaryIDChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnDictionaryChanging(string value);
    partial void OnDictionaryChanged();
    partial void OnTStampChanging(System.Data.Linq.Binary value);
    partial void OnTStampChanged();
    #endregion
		
		public DataDictionary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataDictionaryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int DataDictionaryID
		{
			get
			{
				return this._DataDictionaryID;
			}
			set
			{
				if ((this._DataDictionaryID != value))
				{
					this.OnDataDictionaryIDChanging(value);
					this.SendPropertyChanging();
					this._DataDictionaryID = value;
					this.SendPropertyChanged("DataDictionaryID");
					this.OnDataDictionaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dictionary", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Dictionary
		{
			get
			{
				return this._Dictionary;
			}
			set
			{
				if ((this._Dictionary != value))
				{
					this.OnDictionaryChanging(value);
					this.SendPropertyChanging();
					this._Dictionary = value;
					this.SendPropertyChanged("Dictionary");
					this.OnDictionaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tStamp", Storage="_TStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TStamp
		{
			get
			{
				return this._TStamp;
			}
			set
			{
				if ((this._TStamp != value))
				{
					this.OnTStampChanging(value);
					this.SendPropertyChanging();
					this._TStamp = value;
					this.SendPropertyChanged("TStamp");
					this.OnTStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserType")]
	public partial class UserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserTypeId;
		
		private string _Name;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<UserLogin> _UserLogins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserTypeIdChanging(int value);
    partial void OnUserTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public UserType()
		{
			this._UserLogins = new EntitySet<UserLogin>(new Action<UserLogin>(this.attach_UserLogins), new Action<UserLogin>(this.detach_UserLogins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserTypeId
		{
			get
			{
				return this._UserTypeId;
			}
			set
			{
				if ((this._UserTypeId != value))
				{
					this.OnUserTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserTypeId = value;
					this.SendPropertyChanged("UserTypeId");
					this.OnUserTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_UserLogin", Storage="_UserLogins", ThisKey="UserTypeId", OtherKey="UserTypeId")]
		public EntitySet<UserLogin> UserLogins
		{
			get
			{
				return this._UserLogins;
			}
			set
			{
				this._UserLogins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserLogins(UserLogin entity)
		{
			this.SendPropertyChanging();
			entity.UserType = this;
		}
		
		private void detach_UserLogins(UserLogin entity)
		{
			this.SendPropertyChanging();
			entity.UserType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleId;
		
		private int _ServiceId;
		
		private int _ApplicationKey;
		
		private string _ActionName;
		
		private System.Nullable<System.DateTime> _StartAt;
		
		private int _DelayQuantity;
		
		private string _DelayType;
		
		private System.Nullable<System.DateTime> _LastRun;
		
		private bool _Hidden;
		
		private EntitySet<ScheduleParameter> _ScheduleParameters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleIdChanging(int value);
    partial void OnScheduleIdChanged();
    partial void OnServiceIdChanging(int value);
    partial void OnServiceIdChanged();
    partial void OnApplicationKeyChanging(int value);
    partial void OnApplicationKeyChanged();
    partial void OnActionNameChanging(string value);
    partial void OnActionNameChanged();
    partial void OnStartAtChanging(System.Nullable<System.DateTime> value);
    partial void OnStartAtChanged();
    partial void OnDelayQuantityChanging(int value);
    partial void OnDelayQuantityChanged();
    partial void OnDelayTypeChanging(string value);
    partial void OnDelayTypeChanged();
    partial void OnLastRunChanging(System.Nullable<System.DateTime> value);
    partial void OnLastRunChanged();
    partial void OnHiddenChanging(bool value);
    partial void OnHiddenChanged();
    #endregion
		
		public Schedule()
		{
			this._ScheduleParameters = new EntitySet<ScheduleParameter>(new Action<ScheduleParameter>(this.attach_ScheduleParameters), new Action<ScheduleParameter>(this.detach_ScheduleParameters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="Int NOT NULL")]
		public int ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					this.OnServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceId = value;
					this.SendPropertyChanged("ServiceId");
					this.OnServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationKey", DbType="Int NOT NULL")]
		public int ApplicationKey
		{
			get
			{
				return this._ApplicationKey;
			}
			set
			{
				if ((this._ApplicationKey != value))
				{
					this.OnApplicationKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationKey = value;
					this.SendPropertyChanged("ApplicationKey");
					this.OnApplicationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this.OnActionNameChanging(value);
					this.SendPropertyChanging();
					this._ActionName = value;
					this.SendPropertyChanged("ActionName");
					this.OnActionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartAt
		{
			get
			{
				return this._StartAt;
			}
			set
			{
				if ((this._StartAt != value))
				{
					this.OnStartAtChanging(value);
					this.SendPropertyChanging();
					this._StartAt = value;
					this.SendPropertyChanged("StartAt");
					this.OnStartAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelayQuantity", DbType="Int NOT NULL")]
		public int DelayQuantity
		{
			get
			{
				return this._DelayQuantity;
			}
			set
			{
				if ((this._DelayQuantity != value))
				{
					this.OnDelayQuantityChanging(value);
					this.SendPropertyChanging();
					this._DelayQuantity = value;
					this.SendPropertyChanged("DelayQuantity");
					this.OnDelayQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelayType", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string DelayType
		{
			get
			{
				return this._DelayType;
			}
			set
			{
				if ((this._DelayType != value))
				{
					this.OnDelayTypeChanging(value);
					this.SendPropertyChanging();
					this._DelayType = value;
					this.SendPropertyChanged("DelayType");
					this.OnDelayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRun", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastRun
		{
			get
			{
				return this._LastRun;
			}
			set
			{
				if ((this._LastRun != value))
				{
					this.OnLastRunChanging(value);
					this.SendPropertyChanging();
					this._LastRun = value;
					this.SendPropertyChanged("LastRun");
					this.OnLastRunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="Bit NOT NULL")]
		public bool Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged("Hidden");
					this.OnHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleParameter", Storage="_ScheduleParameters", ThisKey="ScheduleId", OtherKey="ScheduleId")]
		public EntitySet<ScheduleParameter> ScheduleParameters
		{
			get
			{
				return this._ScheduleParameters;
			}
			set
			{
				this._ScheduleParameters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduleParameters(ScheduleParameter entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleParameters(ScheduleParameter entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleParameter")]
	public partial class ScheduleParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleParameterId;
		
		private int _ScheduleId;
		
		private string _Name;
		
		private string _Value;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleParameterIdChanging(int value);
    partial void OnScheduleParameterIdChanged();
    partial void OnScheduleIdChanging(int value);
    partial void OnScheduleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public ScheduleParameter()
		{
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleParameterId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduleParameterId
		{
			get
			{
				return this._ScheduleParameterId;
			}
			set
			{
				if ((this._ScheduleParameterId != value))
				{
					this.OnScheduleParameterIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleParameterId = value;
					this.SendPropertyChanged("ScheduleParameterId");
					this.OnScheduleParameterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int NOT NULL")]
		public int ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleParameter", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="ScheduleId", IsForeignKey=true)]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleParameters.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleParameters.Add(this);
						this._ScheduleId = value.ScheduleId;
					}
					else
					{
						this._ScheduleId = default(int);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaticScheduleParameter")]
	public partial class StaticScheduleParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaticScheduleParameterId;
		
		private int _StaticScheduleId;
		
		private string _Name;
		
		private string _Value;
		
		private EntityRef<StaticSchedule> _StaticSchedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaticScheduleParameterIdChanging(int value);
    partial void OnStaticScheduleParameterIdChanged();
    partial void OnStaticScheduleIdChanging(int value);
    partial void OnStaticScheduleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public StaticScheduleParameter()
		{
			this._StaticSchedule = default(EntityRef<StaticSchedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticScheduleParameterId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaticScheduleParameterId
		{
			get
			{
				return this._StaticScheduleParameterId;
			}
			set
			{
				if ((this._StaticScheduleParameterId != value))
				{
					this.OnStaticScheduleParameterIdChanging(value);
					this.SendPropertyChanging();
					this._StaticScheduleParameterId = value;
					this.SendPropertyChanged("StaticScheduleParameterId");
					this.OnStaticScheduleParameterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticScheduleId", DbType="Int NOT NULL")]
		public int StaticScheduleId
		{
			get
			{
				return this._StaticScheduleId;
			}
			set
			{
				if ((this._StaticScheduleId != value))
				{
					if (this._StaticSchedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaticScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._StaticScheduleId = value;
					this.SendPropertyChanged("StaticScheduleId");
					this.OnStaticScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaticSchedule_StaticScheduleParameter", Storage="_StaticSchedule", ThisKey="StaticScheduleId", OtherKey="StaticScheduleId", IsForeignKey=true)]
		public StaticSchedule StaticSchedule
		{
			get
			{
				return this._StaticSchedule.Entity;
			}
			set
			{
				StaticSchedule previousValue = this._StaticSchedule.Entity;
				if (((previousValue != value) 
							|| (this._StaticSchedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaticSchedule.Entity = null;
						previousValue.StaticScheduleParameters.Remove(this);
					}
					this._StaticSchedule.Entity = value;
					if ((value != null))
					{
						value.StaticScheduleParameters.Add(this);
						this._StaticScheduleId = value.StaticScheduleId;
					}
					else
					{
						this._StaticScheduleId = default(int);
					}
					this.SendPropertyChanged("StaticSchedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AgentContent")]
	public partial class AgentContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AgentContentId;
		
		private int _AgencyAccessId;
		
		private System.Data.Linq.Binary _Banner;
		
		private System.Data.Linq.Binary _TopImage;
		
		private System.Data.Linq.Binary _MiddleImage;
		
		private System.Data.Linq.Binary _BottomRightImage;
		
		private string _LoginPageTopText;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private bool _OwnerReportsOn;
		
		private bool _IncExpReportsOn;
		
		private string _ButtonColor;
		
		private string _ApplicationCode;
		
		private string _AgencyUrl;
		
		private string _FooterBannerUrl;
		
		private System.Data.Linq.Binary _FooterBanner;
		
		private int _AgencyApplicationId;
		
		private string _ButtonTextColor;
		
		private bool _ShowAgencyContactDetails;
		
		private bool _ShowPropManegerContactDetails;
		
		private bool _OwnerShowPropertyImage;
		
		private bool _OwnerShowPropertyDescription;
		
		private bool _OwnerShowTenantDetails;
		
		private bool _ShowMyDetailspage;
		
		private bool _OwnerShowMyDetailsPage;
		
		private bool _TenantShowMyDetailsPage;
		
		private bool _TenantShowPropertyImage;
		
		private bool _TenantShowTenancyDetails;
		
		private bool _UserImportAccessDefault;
		
		private bool _HasFileSmart;
		
		private string _FileSmartUserName;
		
		private string _FileSmartPassword;
		
		private bool _StrataShowMeetings;
		
		private string _StrataContactEmail;
		
		private string _RESTFileSmartUserName;
		
		private string _RESTFileSmartPassword;
		
		private bool _RESTShowDocumentsPageOwner;
		
		private bool _RESTShowDocumentsPageTenant;
		
		private System.Data.Linq.Binary _IPhoneIcon;
		
		private bool _HasBanner;
		
		private bool _HasFooterBanner;
		
		private bool _HasIPhoneIcon;
		
		private bool _IsContactEmailMandatory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAgentContentIdChanging(int value);
    partial void OnAgentContentIdChanged();
    partial void OnAgencyAccessIdChanging(int value);
    partial void OnAgencyAccessIdChanged();
    partial void OnBannerChanging(System.Data.Linq.Binary value);
    partial void OnBannerChanged();
    partial void OnTopImageChanging(System.Data.Linq.Binary value);
    partial void OnTopImageChanged();
    partial void OnMiddleImageChanging(System.Data.Linq.Binary value);
    partial void OnMiddleImageChanged();
    partial void OnBottomRightImageChanging(System.Data.Linq.Binary value);
    partial void OnBottomRightImageChanged();
    partial void OnLoginPageTopTextChanging(string value);
    partial void OnLoginPageTopTextChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnOwnerReportsOnChanging(bool value);
    partial void OnOwnerReportsOnChanged();
    partial void OnIncExpReportsOnChanging(bool value);
    partial void OnIncExpReportsOnChanged();
    partial void OnButtonColorChanging(string value);
    partial void OnButtonColorChanged();
    partial void OnApplicationCodeChanging(string value);
    partial void OnApplicationCodeChanged();
    partial void OnAgencyUrlChanging(string value);
    partial void OnAgencyUrlChanged();
    partial void OnFooterBannerUrlChanging(string value);
    partial void OnFooterBannerUrlChanged();
    partial void OnFooterBannerChanging(System.Data.Linq.Binary value);
    partial void OnFooterBannerChanged();
    partial void OnAgencyApplicationIdChanging(int value);
    partial void OnAgencyApplicationIdChanged();
    partial void OnButtonTextColorChanging(string value);
    partial void OnButtonTextColorChanged();
    partial void OnShowAgencyContactDetailsChanging(bool value);
    partial void OnShowAgencyContactDetailsChanged();
    partial void OnShowPropManegerContactDetailsChanging(bool value);
    partial void OnShowPropManegerContactDetailsChanged();
    partial void OnOwnerShowPropertyImageChanging(bool value);
    partial void OnOwnerShowPropertyImageChanged();
    partial void OnOwnerShowPropertyDescriptionChanging(bool value);
    partial void OnOwnerShowPropertyDescriptionChanged();
    partial void OnOwnerShowTenantDetailsChanging(bool value);
    partial void OnOwnerShowTenantDetailsChanged();
    partial void OnShowMyDetailspageChanging(bool value);
    partial void OnShowMyDetailspageChanged();
    partial void OnOwnerShowMyDetailsPageChanging(bool value);
    partial void OnOwnerShowMyDetailsPageChanged();
    partial void OnTenantShowMyDetailsPageChanging(bool value);
    partial void OnTenantShowMyDetailsPageChanged();
    partial void OnTenantShowPropertyImageChanging(bool value);
    partial void OnTenantShowPropertyImageChanged();
    partial void OnTenantShowTenancyDetailsChanging(bool value);
    partial void OnTenantShowTenancyDetailsChanged();
    partial void OnUserImportAccessDefaultChanging(bool value);
    partial void OnUserImportAccessDefaultChanged();
    partial void OnHasFileSmartChanging(bool value);
    partial void OnHasFileSmartChanged();
    partial void OnFileSmartUserNameChanging(string value);
    partial void OnFileSmartUserNameChanged();
    partial void OnFileSmartPasswordChanging(string value);
    partial void OnFileSmartPasswordChanged();
    partial void OnStrataShowMeetingsChanging(bool value);
    partial void OnStrataShowMeetingsChanged();
    partial void OnStrataContactEmailChanging(string value);
    partial void OnStrataContactEmailChanged();
    partial void OnRESTFileSmartUserNameChanging(string value);
    partial void OnRESTFileSmartUserNameChanged();
    partial void OnRESTFileSmartPasswordChanging(string value);
    partial void OnRESTFileSmartPasswordChanged();
    partial void OnRESTShowDocumentsPageOwnerChanging(bool value);
    partial void OnRESTShowDocumentsPageOwnerChanged();
    partial void OnRESTShowDocumentsPageTenantChanging(bool value);
    partial void OnRESTShowDocumentsPageTenantChanged();
    partial void OnIPhoneIconChanging(System.Data.Linq.Binary value);
    partial void OnIPhoneIconChanged();
    partial void OnHasBannerChanging(bool value);
    partial void OnHasBannerChanged();
    partial void OnHasFooterBannerChanging(bool value);
    partial void OnHasFooterBannerChanged();
    partial void OnHasIPhoneIconChanging(bool value);
    partial void OnHasIPhoneIconChanged();
    partial void OnIsContactEmailMandatoryChanging(bool value);
    partial void OnIsContactEmailMandatoryChanged();
    #endregion
		
		public AgentContent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentContentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AgentContentId
		{
			get
			{
				return this._AgentContentId;
			}
			set
			{
				if ((this._AgentContentId != value))
				{
					this.OnAgentContentIdChanging(value);
					this.SendPropertyChanging();
					this._AgentContentId = value;
					this.SendPropertyChanged("AgentContentId");
					this.OnAgentContentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyAccessId", DbType="Int NOT NULL")]
		public int AgencyAccessId
		{
			get
			{
				return this._AgencyAccessId;
			}
			set
			{
				if ((this._AgencyAccessId != value))
				{
					this.OnAgencyAccessIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyAccessId = value;
					this.SendPropertyChanged("AgencyAccessId");
					this.OnAgencyAccessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Banner", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Banner
		{
			get
			{
				return this._Banner;
			}
			set
			{
				if ((this._Banner != value))
				{
					this.OnBannerChanging(value);
					this.SendPropertyChanging();
					this._Banner = value;
					this.SendPropertyChanged("Banner");
					this.OnBannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopImage", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TopImage
		{
			get
			{
				return this._TopImage;
			}
			set
			{
				if ((this._TopImage != value))
				{
					this.OnTopImageChanging(value);
					this.SendPropertyChanging();
					this._TopImage = value;
					this.SendPropertyChanged("TopImage");
					this.OnTopImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleImage", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary MiddleImage
		{
			get
			{
				return this._MiddleImage;
			}
			set
			{
				if ((this._MiddleImage != value))
				{
					this.OnMiddleImageChanging(value);
					this.SendPropertyChanging();
					this._MiddleImage = value;
					this.SendPropertyChanged("MiddleImage");
					this.OnMiddleImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BottomRightImage", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BottomRightImage
		{
			get
			{
				return this._BottomRightImage;
			}
			set
			{
				if ((this._BottomRightImage != value))
				{
					this.OnBottomRightImageChanging(value);
					this.SendPropertyChanging();
					this._BottomRightImage = value;
					this.SendPropertyChanged("BottomRightImage");
					this.OnBottomRightImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPageTopText", DbType="VarChar(128)")]
		public string LoginPageTopText
		{
			get
			{
				return this._LoginPageTopText;
			}
			set
			{
				if ((this._LoginPageTopText != value))
				{
					this.OnLoginPageTopTextChanging(value);
					this.SendPropertyChanging();
					this._LoginPageTopText = value;
					this.SendPropertyChanged("LoginPageTopText");
					this.OnLoginPageTopTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerReportsOn", DbType="Bit NOT NULL")]
		public bool OwnerReportsOn
		{
			get
			{
				return this._OwnerReportsOn;
			}
			set
			{
				if ((this._OwnerReportsOn != value))
				{
					this.OnOwnerReportsOnChanging(value);
					this.SendPropertyChanging();
					this._OwnerReportsOn = value;
					this.SendPropertyChanged("OwnerReportsOn");
					this.OnOwnerReportsOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncExpReportsOn", DbType="Bit NOT NULL")]
		public bool IncExpReportsOn
		{
			get
			{
				return this._IncExpReportsOn;
			}
			set
			{
				if ((this._IncExpReportsOn != value))
				{
					this.OnIncExpReportsOnChanging(value);
					this.SendPropertyChanging();
					this._IncExpReportsOn = value;
					this.SendPropertyChanged("IncExpReportsOn");
					this.OnIncExpReportsOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonColor", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string ButtonColor
		{
			get
			{
				return this._ButtonColor;
			}
			set
			{
				if ((this._ButtonColor != value))
				{
					this.OnButtonColorChanging(value);
					this.SendPropertyChanging();
					this._ButtonColor = value;
					this.SendPropertyChanged("ButtonColor");
					this.OnButtonColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCode", DbType="VarChar(5)")]
		public string ApplicationCode
		{
			get
			{
				return this._ApplicationCode;
			}
			set
			{
				if ((this._ApplicationCode != value))
				{
					this.OnApplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._ApplicationCode = value;
					this.SendPropertyChanged("ApplicationCode");
					this.OnApplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyUrl", DbType="VarChar(2000)")]
		public string AgencyUrl
		{
			get
			{
				return this._AgencyUrl;
			}
			set
			{
				if ((this._AgencyUrl != value))
				{
					this.OnAgencyUrlChanging(value);
					this.SendPropertyChanging();
					this._AgencyUrl = value;
					this.SendPropertyChanged("AgencyUrl");
					this.OnAgencyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FooterBannerUrl", DbType="VarChar(2000)")]
		public string FooterBannerUrl
		{
			get
			{
				return this._FooterBannerUrl;
			}
			set
			{
				if ((this._FooterBannerUrl != value))
				{
					this.OnFooterBannerUrlChanging(value);
					this.SendPropertyChanging();
					this._FooterBannerUrl = value;
					this.SendPropertyChanged("FooterBannerUrl");
					this.OnFooterBannerUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FooterBanner", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FooterBanner
		{
			get
			{
				return this._FooterBanner;
			}
			set
			{
				if ((this._FooterBanner != value))
				{
					this.OnFooterBannerChanging(value);
					this.SendPropertyChanging();
					this._FooterBanner = value;
					this.SendPropertyChanged("FooterBanner");
					this.OnFooterBannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyApplicationId", DbType="Int NOT NULL")]
		public int AgencyApplicationId
		{
			get
			{
				return this._AgencyApplicationId;
			}
			set
			{
				if ((this._AgencyApplicationId != value))
				{
					this.OnAgencyApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyApplicationId = value;
					this.SendPropertyChanged("AgencyApplicationId");
					this.OnAgencyApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonTextColor", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string ButtonTextColor
		{
			get
			{
				return this._ButtonTextColor;
			}
			set
			{
				if ((this._ButtonTextColor != value))
				{
					this.OnButtonTextColorChanging(value);
					this.SendPropertyChanging();
					this._ButtonTextColor = value;
					this.SendPropertyChanged("ButtonTextColor");
					this.OnButtonTextColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowAgencyContactDetails", DbType="Bit NOT NULL")]
		public bool ShowAgencyContactDetails
		{
			get
			{
				return this._ShowAgencyContactDetails;
			}
			set
			{
				if ((this._ShowAgencyContactDetails != value))
				{
					this.OnShowAgencyContactDetailsChanging(value);
					this.SendPropertyChanging();
					this._ShowAgencyContactDetails = value;
					this.SendPropertyChanged("ShowAgencyContactDetails");
					this.OnShowAgencyContactDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowPropManegerContactDetails", DbType="Bit NOT NULL")]
		public bool ShowPropManegerContactDetails
		{
			get
			{
				return this._ShowPropManegerContactDetails;
			}
			set
			{
				if ((this._ShowPropManegerContactDetails != value))
				{
					this.OnShowPropManegerContactDetailsChanging(value);
					this.SendPropertyChanging();
					this._ShowPropManegerContactDetails = value;
					this.SendPropertyChanged("ShowPropManegerContactDetails");
					this.OnShowPropManegerContactDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerShowPropertyImage", DbType="Bit NOT NULL")]
		public bool OwnerShowPropertyImage
		{
			get
			{
				return this._OwnerShowPropertyImage;
			}
			set
			{
				if ((this._OwnerShowPropertyImage != value))
				{
					this.OnOwnerShowPropertyImageChanging(value);
					this.SendPropertyChanging();
					this._OwnerShowPropertyImage = value;
					this.SendPropertyChanged("OwnerShowPropertyImage");
					this.OnOwnerShowPropertyImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerShowPropertyDescription", DbType="Bit NOT NULL")]
		public bool OwnerShowPropertyDescription
		{
			get
			{
				return this._OwnerShowPropertyDescription;
			}
			set
			{
				if ((this._OwnerShowPropertyDescription != value))
				{
					this.OnOwnerShowPropertyDescriptionChanging(value);
					this.SendPropertyChanging();
					this._OwnerShowPropertyDescription = value;
					this.SendPropertyChanged("OwnerShowPropertyDescription");
					this.OnOwnerShowPropertyDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerShowTenantDetails", DbType="Bit NOT NULL")]
		public bool OwnerShowTenantDetails
		{
			get
			{
				return this._OwnerShowTenantDetails;
			}
			set
			{
				if ((this._OwnerShowTenantDetails != value))
				{
					this.OnOwnerShowTenantDetailsChanging(value);
					this.SendPropertyChanging();
					this._OwnerShowTenantDetails = value;
					this.SendPropertyChanged("OwnerShowTenantDetails");
					this.OnOwnerShowTenantDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowMyDetailspage", DbType="Bit NOT NULL")]
		public bool ShowMyDetailspage
		{
			get
			{
				return this._ShowMyDetailspage;
			}
			set
			{
				if ((this._ShowMyDetailspage != value))
				{
					this.OnShowMyDetailspageChanging(value);
					this.SendPropertyChanging();
					this._ShowMyDetailspage = value;
					this.SendPropertyChanged("ShowMyDetailspage");
					this.OnShowMyDetailspageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerShowMyDetailsPage", DbType="Bit NOT NULL")]
		public bool OwnerShowMyDetailsPage
		{
			get
			{
				return this._OwnerShowMyDetailsPage;
			}
			set
			{
				if ((this._OwnerShowMyDetailsPage != value))
				{
					this.OnOwnerShowMyDetailsPageChanging(value);
					this.SendPropertyChanging();
					this._OwnerShowMyDetailsPage = value;
					this.SendPropertyChanged("OwnerShowMyDetailsPage");
					this.OnOwnerShowMyDetailsPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenantShowMyDetailsPage", DbType="Bit NOT NULL")]
		public bool TenantShowMyDetailsPage
		{
			get
			{
				return this._TenantShowMyDetailsPage;
			}
			set
			{
				if ((this._TenantShowMyDetailsPage != value))
				{
					this.OnTenantShowMyDetailsPageChanging(value);
					this.SendPropertyChanging();
					this._TenantShowMyDetailsPage = value;
					this.SendPropertyChanged("TenantShowMyDetailsPage");
					this.OnTenantShowMyDetailsPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenantShowPropertyImage", DbType="Bit NOT NULL")]
		public bool TenantShowPropertyImage
		{
			get
			{
				return this._TenantShowPropertyImage;
			}
			set
			{
				if ((this._TenantShowPropertyImage != value))
				{
					this.OnTenantShowPropertyImageChanging(value);
					this.SendPropertyChanging();
					this._TenantShowPropertyImage = value;
					this.SendPropertyChanged("TenantShowPropertyImage");
					this.OnTenantShowPropertyImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenantShowTenancyDetails", DbType="Bit NOT NULL")]
		public bool TenantShowTenancyDetails
		{
			get
			{
				return this._TenantShowTenancyDetails;
			}
			set
			{
				if ((this._TenantShowTenancyDetails != value))
				{
					this.OnTenantShowTenancyDetailsChanging(value);
					this.SendPropertyChanging();
					this._TenantShowTenancyDetails = value;
					this.SendPropertyChanged("TenantShowTenancyDetails");
					this.OnTenantShowTenancyDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserImportAccessDefault", DbType="Bit NOT NULL")]
		public bool UserImportAccessDefault
		{
			get
			{
				return this._UserImportAccessDefault;
			}
			set
			{
				if ((this._UserImportAccessDefault != value))
				{
					this.OnUserImportAccessDefaultChanging(value);
					this.SendPropertyChanging();
					this._UserImportAccessDefault = value;
					this.SendPropertyChanged("UserImportAccessDefault");
					this.OnUserImportAccessDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFileSmart", DbType="Bit NOT NULL")]
		public bool HasFileSmart
		{
			get
			{
				return this._HasFileSmart;
			}
			set
			{
				if ((this._HasFileSmart != value))
				{
					this.OnHasFileSmartChanging(value);
					this.SendPropertyChanging();
					this._HasFileSmart = value;
					this.SendPropertyChanged("HasFileSmart");
					this.OnHasFileSmartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSmartUserName", DbType="VarChar(25)")]
		public string FileSmartUserName
		{
			get
			{
				return this._FileSmartUserName;
			}
			set
			{
				if ((this._FileSmartUserName != value))
				{
					this.OnFileSmartUserNameChanging(value);
					this.SendPropertyChanging();
					this._FileSmartUserName = value;
					this.SendPropertyChanged("FileSmartUserName");
					this.OnFileSmartUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSmartPassword", DbType="VarChar(25)")]
		public string FileSmartPassword
		{
			get
			{
				return this._FileSmartPassword;
			}
			set
			{
				if ((this._FileSmartPassword != value))
				{
					this.OnFileSmartPasswordChanging(value);
					this.SendPropertyChanging();
					this._FileSmartPassword = value;
					this.SendPropertyChanged("FileSmartPassword");
					this.OnFileSmartPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrataShowMeetings", DbType="Bit NOT NULL")]
		public bool StrataShowMeetings
		{
			get
			{
				return this._StrataShowMeetings;
			}
			set
			{
				if ((this._StrataShowMeetings != value))
				{
					this.OnStrataShowMeetingsChanging(value);
					this.SendPropertyChanging();
					this._StrataShowMeetings = value;
					this.SendPropertyChanged("StrataShowMeetings");
					this.OnStrataShowMeetingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrataContactEmail", DbType="VarChar(300)")]
		public string StrataContactEmail
		{
			get
			{
				return this._StrataContactEmail;
			}
			set
			{
				if ((this._StrataContactEmail != value))
				{
					this.OnStrataContactEmailChanging(value);
					this.SendPropertyChanging();
					this._StrataContactEmail = value;
					this.SendPropertyChanged("StrataContactEmail");
					this.OnStrataContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESTFileSmartUserName", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string RESTFileSmartUserName
		{
			get
			{
				return this._RESTFileSmartUserName;
			}
			set
			{
				if ((this._RESTFileSmartUserName != value))
				{
					this.OnRESTFileSmartUserNameChanging(value);
					this.SendPropertyChanging();
					this._RESTFileSmartUserName = value;
					this.SendPropertyChanged("RESTFileSmartUserName");
					this.OnRESTFileSmartUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESTFileSmartPassword", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string RESTFileSmartPassword
		{
			get
			{
				return this._RESTFileSmartPassword;
			}
			set
			{
				if ((this._RESTFileSmartPassword != value))
				{
					this.OnRESTFileSmartPasswordChanging(value);
					this.SendPropertyChanging();
					this._RESTFileSmartPassword = value;
					this.SendPropertyChanged("RESTFileSmartPassword");
					this.OnRESTFileSmartPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESTShowDocumentsPageOwner", DbType="Bit NOT NULL")]
		public bool RESTShowDocumentsPageOwner
		{
			get
			{
				return this._RESTShowDocumentsPageOwner;
			}
			set
			{
				if ((this._RESTShowDocumentsPageOwner != value))
				{
					this.OnRESTShowDocumentsPageOwnerChanging(value);
					this.SendPropertyChanging();
					this._RESTShowDocumentsPageOwner = value;
					this.SendPropertyChanged("RESTShowDocumentsPageOwner");
					this.OnRESTShowDocumentsPageOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESTShowDocumentsPageTenant", DbType="Bit NOT NULL")]
		public bool RESTShowDocumentsPageTenant
		{
			get
			{
				return this._RESTShowDocumentsPageTenant;
			}
			set
			{
				if ((this._RESTShowDocumentsPageTenant != value))
				{
					this.OnRESTShowDocumentsPageTenantChanging(value);
					this.SendPropertyChanging();
					this._RESTShowDocumentsPageTenant = value;
					this.SendPropertyChanged("RESTShowDocumentsPageTenant");
					this.OnRESTShowDocumentsPageTenantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPhoneIcon", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary IPhoneIcon
		{
			get
			{
				return this._IPhoneIcon;
			}
			set
			{
				if ((this._IPhoneIcon != value))
				{
					this.OnIPhoneIconChanging(value);
					this.SendPropertyChanging();
					this._IPhoneIcon = value;
					this.SendPropertyChanged("IPhoneIcon");
					this.OnIPhoneIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBanner", DbType="Bit NOT NULL")]
		public bool HasBanner
		{
			get
			{
				return this._HasBanner;
			}
			set
			{
				if ((this._HasBanner != value))
				{
					this.OnHasBannerChanging(value);
					this.SendPropertyChanging();
					this._HasBanner = value;
					this.SendPropertyChanged("HasBanner");
					this.OnHasBannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFooterBanner", DbType="Bit NOT NULL")]
		public bool HasFooterBanner
		{
			get
			{
				return this._HasFooterBanner;
			}
			set
			{
				if ((this._HasFooterBanner != value))
				{
					this.OnHasFooterBannerChanging(value);
					this.SendPropertyChanging();
					this._HasFooterBanner = value;
					this.SendPropertyChanged("HasFooterBanner");
					this.OnHasFooterBannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasIPhoneIcon", DbType="Bit NOT NULL")]
		public bool HasIPhoneIcon
		{
			get
			{
				return this._HasIPhoneIcon;
			}
			set
			{
				if ((this._HasIPhoneIcon != value))
				{
					this.OnHasIPhoneIconChanging(value);
					this.SendPropertyChanging();
					this._HasIPhoneIcon = value;
					this.SendPropertyChanged("HasIPhoneIcon");
					this.OnHasIPhoneIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContactEmailMandatory", DbType="Bit NOT NULL")]
		public bool IsContactEmailMandatory
		{
			get
			{
				return this._IsContactEmailMandatory;
			}
			set
			{
				if ((this._IsContactEmailMandatory != value))
				{
					this.OnIsContactEmailMandatoryChanging(value);
					this.SendPropertyChanging();
					this._IsContactEmailMandatory = value;
					this.SendPropertyChanged("IsContactEmailMandatory");
					this.OnIsContactEmailMandatoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "rmh.RockendAction")]
    public partial class RockendAction : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _RockendActionID;

        private string _ActionName;

        private string _AssemblyName;

        private string _ClassName;

        private int _Version;

        private string _BetaAssemblyName;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnRockendActionIDChanging(int value);
        partial void OnRockendActionIDChanged();
        partial void OnActionNameChanging(string value);
        partial void OnActionNameChanged();
        partial void OnAssemblyNameChanging(string value);
        partial void OnAssemblyNameChanged();
        partial void OnClassNameChanging(string value);
        partial void OnClassNameChanged();
        partial void OnVersionChanging(int value);
        partial void OnVersionChanged();
        partial void OnBetaAssemblyNameChanging(string value);
        partial void OnBetaAssemblyNameChanged();
        #endregion

        public RockendAction()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RockendActionID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int RockendActionID
        {
            get
            {
                return this._RockendActionID;
            }
            set
            {
                if ((this._RockendActionID != value))
                {
                    this.OnRockendActionIDChanging(value);
                    this.SendPropertyChanging();
                    this._RockendActionID = value;
                    this.SendPropertyChanged("RockendActionID");
                    this.OnRockendActionIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ActionName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ActionName
        {
            get
            {
                return this._ActionName;
            }
            set
            {
                if ((this._ActionName != value))
                {
                    this.OnActionNameChanging(value);
                    this.SendPropertyChanging();
                    this._ActionName = value;
                    this.SendPropertyChanged("ActionName");
                    this.OnActionNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AssemblyName", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string AssemblyName
        {
            get
            {
                return this._AssemblyName;
            }
            set
            {
                if ((this._AssemblyName != value))
                {
                    this.OnAssemblyNameChanging(value);
                    this.SendPropertyChanging();
                    this._AssemblyName = value;
                    this.SendPropertyChanged("AssemblyName");
                    this.OnAssemblyNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClassName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ClassName
        {
            get
            {
                return this._ClassName;
            }
            set
            {
                if ((this._ClassName != value))
                {
                    this.OnClassNameChanging(value);
                    this.SendPropertyChanging();
                    this._ClassName = value;
                    this.SendPropertyChanged("ClassName");
                    this.OnClassNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Version", DbType = "Int NOT NULL")]
        public int Version
        {
            get
            {
                return this._Version;
            }
            set
            {
                if ((this._Version != value))
                {
                    this.OnVersionChanging(value);
                    this.SendPropertyChanging();
                    this._Version = value;
                    this.SendPropertyChanged("Version");
                    this.OnVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BetaAssemblyName", DbType = "NVarChar(100)")]
        public string BetaAssemblyName
        {
            get
            {
                return this._BetaAssemblyName;
            }
            set
            {
                if ((this._BetaAssemblyName != value))
                {
                    this.OnBetaAssemblyNameChanging(value);
                    this.SendPropertyChanging();
                    this._BetaAssemblyName = value;
                    this.SendPropertyChanged("BetaAssemblyName");
                    this.OnBetaAssemblyNameChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name="rmh.AgencyAccess")]
	public partial class AgencyAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AgencyAccessID;
		
		private string _AgencyName;
		
		private System.Guid _AgencyGUID;
		
		private System.DateTimeOffset _Created;
		
		private string _ClientCode;
		
		private string _SageName;
		
		private System.DateTimeOffset _Updated;
		
		private EntitySet<AgencyApplication> _AgencyApplications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAgencyAccessIDChanging(int value);
    partial void OnAgencyAccessIDChanged();
    partial void OnAgencyNameChanging(string value);
    partial void OnAgencyNameChanged();
    partial void OnAgencyGUIDChanging(System.Guid value);
    partial void OnAgencyGUIDChanged();
    partial void OnCreatedChanging(System.DateTimeOffset value);
    partial void OnCreatedChanged();
    partial void OnClientCodeChanging(string value);
    partial void OnClientCodeChanged();
    partial void OnSageNameChanging(string value);
    partial void OnSageNameChanged();
    partial void OnUpdatedChanging(System.DateTimeOffset value);
    partial void OnUpdatedChanged();
    #endregion
		
		public AgencyAccess()
		{
			this._AgencyApplications = new EntitySet<AgencyApplication>(new Action<AgencyApplication>(this.attach_AgencyApplications), new Action<AgencyApplication>(this.detach_AgencyApplications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyAccessID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AgencyAccessID
		{
			get
			{
				return this._AgencyAccessID;
			}
			set
			{
				if ((this._AgencyAccessID != value))
				{
					this.OnAgencyAccessIDChanging(value);
					this.SendPropertyChanging();
					this._AgencyAccessID = value;
					this.SendPropertyChanged("AgencyAccessID");
					this.OnAgencyAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AgencyName
		{
			get
			{
				return this._AgencyName;
			}
			set
			{
				if ((this._AgencyName != value))
				{
					this.OnAgencyNameChanging(value);
					this.SendPropertyChanging();
					this._AgencyName = value;
					this.SendPropertyChanged("AgencyName");
					this.OnAgencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AgencyGUID
		{
			get
			{
				return this._AgencyGUID;
			}
			set
			{
				if ((this._AgencyGUID != value))
				{
					this.OnAgencyGUIDChanging(value);
					this.SendPropertyChanging();
					this._AgencyGUID = value;
					this.SendPropertyChanged("AgencyGUID");
					this.OnAgencyGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="NVarChar(10)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this.OnClientCodeChanging(value);
					this.SendPropertyChanging();
					this._ClientCode = value;
					this.SendPropertyChanged("ClientCode");
					this.OnClientCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SageName")]
		public string SageName
		{
			get
			{
				return this._SageName;
			}
			set
			{
				if ((this._SageName != value))
				{
					this.OnSageNameChanging(value);
					this.SendPropertyChanging();
					this._SageName = value;
					this.SendPropertyChanged("SageName");
					this.OnSageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated")]
		public System.DateTimeOffset Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AgencyAccess_AgencyApplication", Storage="_AgencyApplications", ThisKey="AgencyAccessID", OtherKey="AgencyAccessID")]
		public EntitySet<AgencyApplication> AgencyApplications
		{
			get
			{
				return this._AgencyApplications;
			}
			set
			{
				this._AgencyApplications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AgencyApplications(AgencyApplication entity)
		{
			this.SendPropertyChanging();
			entity.AgencyAccess = this;
		}
		
		private void detach_AgencyApplications(AgencyApplication entity)
		{
			this.SendPropertyChanging();
			entity.AgencyAccess = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rmh.ServiceAgencyApplication")]
	public partial class ServiceAgencyApplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceAgencyApplicationID;
		
		private int _ServiceID;
		
		private int _AgencyApplicationID;
		
		private bool _IsActive;
		
		private System.DateTimeOffset _Created;
		
		private System.DateTimeOffset _Updated;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<AgencyApplication> _AgencyApplication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceAgencyApplicationIDChanging(int value);
    partial void OnServiceAgencyApplicationIDChanged();
    partial void OnServiceIDChanging(int value);
    partial void OnServiceIDChanged();
    partial void OnAgencyApplicationIDChanging(int value);
    partial void OnAgencyApplicationIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedChanging(System.DateTimeOffset value);
    partial void OnCreatedChanged();
    partial void OnUpdatedChanging(System.DateTimeOffset value);
    partial void OnUpdatedChanged();
    #endregion
		
		public ServiceAgencyApplication()
		{
			this._Service = default(EntityRef<Service>);
			this._AgencyApplication = default(EntityRef<AgencyApplication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceAgencyApplicationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServiceAgencyApplicationID
		{
			get
			{
				return this._ServiceAgencyApplicationID;
			}
			set
			{
				if ((this._ServiceAgencyApplicationID != value))
				{
					this.OnServiceAgencyApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceAgencyApplicationID = value;
					this.SendPropertyChanged("ServiceAgencyApplicationID");
					this.OnServiceAgencyApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int NOT NULL")]
		public int ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyApplicationID", DbType="Int NOT NULL")]
		public int AgencyApplicationID
		{
			get
			{
				return this._AgencyApplicationID;
			}
			set
			{
				if ((this._AgencyApplicationID != value))
				{
					if (this._AgencyApplication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._AgencyApplicationID = value;
					this.SendPropertyChanged("AgencyApplicationID");
					this.OnAgencyApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ServiceAgencyApplication", Storage="_Service", ThisKey="ServiceID", OtherKey="ServiceID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.ServiceAgencyApplications.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.ServiceAgencyApplications.Add(this);
						this._ServiceID = value.ServiceID;
					}
					else
					{
						this._ServiceID = default(int);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AgencyApplication_ServiceAgencyApplication", Storage="_AgencyApplication", ThisKey="AgencyApplicationID", OtherKey="AgencyApplicationID", IsForeignKey=true)]
		public AgencyApplication AgencyApplication
		{
			get
			{
				return this._AgencyApplication.Entity;
			}
			set
			{
				AgencyApplication previousValue = this._AgencyApplication.Entity;
				if (((previousValue != value) 
							|| (this._AgencyApplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AgencyApplication.Entity = null;
						previousValue.ServiceAgencyApplications.Remove(this);
					}
					this._AgencyApplication.Entity = value;
					if ((value != null))
					{
						value.ServiceAgencyApplications.Add(this);
						this._AgencyApplicationID = value.AgencyApplicationID;
					}
					else
					{
						this._AgencyApplicationID = default(int);
					}
					this.SendPropertyChanged("AgencyApplication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rmh.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceID;
		
		private string _ServiceName;
		
		private int _ServiceKey;
		
		private string _ServicePassword;
		
		private bool _AllAgencies;
		
		private string _AppCode;
		
		private EntitySet<ServiceAgencyApplication> _ServiceAgencyApplications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceIDChanging(int value);
    partial void OnServiceIDChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnServiceKeyChanging(int value);
    partial void OnServiceKeyChanged();
    partial void OnServicePasswordChanging(string value);
    partial void OnServicePasswordChanged();
    partial void OnAllAgenciesChanging(bool value);
    partial void OnAllAgenciesChanged();
    partial void OnAppCodeChanging(string value);
    partial void OnAppCodeChanged();
    #endregion
		
		public Service()
		{
			this._ServiceAgencyApplications = new EntitySet<ServiceAgencyApplication>(new Action<ServiceAgencyApplication>(this.attach_ServiceAgencyApplications), new Action<ServiceAgencyApplication>(this.detach_ServiceAgencyApplications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceKey", DbType="Int NOT NULL")]
		public int ServiceKey
		{
			get
			{
				return this._ServiceKey;
			}
			set
			{
				if ((this._ServiceKey != value))
				{
					this.OnServiceKeyChanging(value);
					this.SendPropertyChanging();
					this._ServiceKey = value;
					this.SendPropertyChanged("ServiceKey");
					this.OnServiceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePassword", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ServicePassword
		{
			get
			{
				return this._ServicePassword;
			}
			set
			{
				if ((this._ServicePassword != value))
				{
					this.OnServicePasswordChanging(value);
					this.SendPropertyChanging();
					this._ServicePassword = value;
					this.SendPropertyChanged("ServicePassword");
					this.OnServicePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllAgencies", DbType="Bit NOT NULL")]
		public bool AllAgencies
		{
			get
			{
				return this._AllAgencies;
			}
			set
			{
				if ((this._AllAgencies != value))
				{
					this.OnAllAgenciesChanging(value);
					this.SendPropertyChanging();
					this._AllAgencies = value;
					this.SendPropertyChanged("AllAgencies");
					this.OnAllAgenciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string AppCode
		{
			get
			{
				return this._AppCode;
			}
			set
			{
				if ((this._AppCode != value))
				{
					this.OnAppCodeChanging(value);
					this.SendPropertyChanging();
					this._AppCode = value;
					this.SendPropertyChanged("AppCode");
					this.OnAppCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ServiceAgencyApplication", Storage="_ServiceAgencyApplications", ThisKey="ServiceID", OtherKey="ServiceID")]
		public EntitySet<ServiceAgencyApplication> ServiceAgencyApplications
		{
			get
			{
				return this._ServiceAgencyApplications;
			}
			set
			{
				this._ServiceAgencyApplications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceAgencyApplications(ServiceAgencyApplication entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_ServiceAgencyApplications(ServiceAgencyApplication entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogin")]
	public partial class UserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserLoginId;
		
		private int _ApplicationKey;
		
		private int _UserTypeId;
		
		private System.Nullable<int> _OriginalUserId;
		
		private string _FullName;
		
		private string _UserName;
		
		private string _Password;
		
		private bool _AccessGranted;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private int _AccountStatusInREST;
		
		private EntityRef<UserType> _UserType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserLoginIdChanging(int value);
    partial void OnUserLoginIdChanged();
    partial void OnApplicationKeyChanging(int value);
    partial void OnApplicationKeyChanged();
    partial void OnUserTypeIdChanging(int value);
    partial void OnUserTypeIdChanged();
    partial void OnOriginalUserIdChanging(System.Nullable<int> value);
    partial void OnOriginalUserIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAccessGrantedChanging(bool value);
    partial void OnAccessGrantedChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    partial void OnAccountStatusInRESTChanging(int value);
    partial void OnAccountStatusInRESTChanged();
    #endregion
		
		public UserLogin()
		{
			this._UserType = default(EntityRef<UserType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLoginId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserLoginId
		{
			get
			{
				return this._UserLoginId;
			}
			set
			{
				if ((this._UserLoginId != value))
				{
					this.OnUserLoginIdChanging(value);
					this.SendPropertyChanging();
					this._UserLoginId = value;
					this.SendPropertyChanged("UserLoginId");
					this.OnUserLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationKey", DbType="Int NOT NULL")]
		public int ApplicationKey
		{
			get
			{
				return this._ApplicationKey;
			}
			set
			{
				if ((this._ApplicationKey != value))
				{
					this.OnApplicationKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationKey = value;
					this.SendPropertyChanged("ApplicationKey");
					this.OnApplicationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeId", DbType="Int NOT NULL")]
		public int UserTypeId
		{
			get
			{
				return this._UserTypeId;
			}
			set
			{
				if ((this._UserTypeId != value))
				{
					if (this._UserType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserTypeId = value;
					this.SendPropertyChanged("UserTypeId");
					this.OnUserTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalUserId", DbType="Int")]
		public System.Nullable<int> OriginalUserId
		{
			get
			{
				return this._OriginalUserId;
			}
			set
			{
				if ((this._OriginalUserId != value))
				{
					this.OnOriginalUserIdChanging(value);
					this.SendPropertyChanging();
					this._OriginalUserId = value;
					this.SendPropertyChanged("OriginalUserId");
					this.OnOriginalUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessGranted", DbType="Bit NOT NULL")]
		public bool AccessGranted
		{
			get
			{
				return this._AccessGranted;
			}
			set
			{
				if ((this._AccessGranted != value))
				{
					this.OnAccessGrantedChanging(value);
					this.SendPropertyChanging();
					this._AccessGranted = value;
					this.SendPropertyChanged("AccessGranted");
					this.OnAccessGrantedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountStatusInREST", DbType="Int NOT NULL")]
		public int AccountStatusInREST
		{
			get
			{
				return this._AccountStatusInREST;
			}
			set
			{
				if ((this._AccountStatusInREST != value))
				{
					this.OnAccountStatusInRESTChanging(value);
					this.SendPropertyChanging();
					this._AccountStatusInREST = value;
					this.SendPropertyChanged("AccountStatusInREST");
					this.OnAccountStatusInRESTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_UserLogin", Storage="_UserType", ThisKey="UserTypeId", OtherKey="UserTypeId", IsForeignKey=true)]
		public UserType UserType
		{
			get
			{
				return this._UserType.Entity;
			}
			set
			{
				UserType previousValue = this._UserType.Entity;
				if (((previousValue != value) 
							|| (this._UserType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserType.Entity = null;
						previousValue.UserLogins.Remove(this);
					}
					this._UserType.Entity = value;
					if ((value != null))
					{
						value.UserLogins.Add(this);
						this._UserTypeId = value.UserTypeId;
					}
					else
					{
						this._UserTypeId = default(int);
					}
					this.SendPropertyChanged("UserType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rmh.Hits")]
	public partial class Hit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HitID;
		
		private System.Nullable<System.DateTime> _RequestTime;
		
		private System.Nullable<System.Guid> _RequestID;
		
		private int _ServiceKey;
		
		private int _ApplicationKey;
		
		private string _ActionName;
		
		private System.Nullable<System.DateTime> _ResponseTime;
		
		private string _Notes;
		
		private string _DeviceType;
		
		private string _AppVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHitIDChanging(int value);
    partial void OnHitIDChanged();
    partial void OnRequestTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestTimeChanged();
    partial void OnRequestIDChanging(System.Nullable<System.Guid> value);
    partial void OnRequestIDChanged();
    partial void OnServiceKeyChanging(int value);
    partial void OnServiceKeyChanged();
    partial void OnApplicationKeyChanging(int value);
    partial void OnApplicationKeyChanged();
    partial void OnActionNameChanging(string value);
    partial void OnActionNameChanged();
    partial void OnResponseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnResponseTimeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDeviceTypeChanging(string value);
    partial void OnDeviceTypeChanged();
    partial void OnAppVersionChanging(string value);
    partial void OnAppVersionChanged();
    #endregion
		
		public Hit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HitID
		{
			get
			{
				return this._HitID;
			}
			set
			{
				if ((this._HitID != value))
				{
					this.OnHitIDChanging(value);
					this.SendPropertyChanging();
					this._HitID = value;
					this.SendPropertyChanged("HitID");
					this.OnHitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceKey", DbType="Int NOT NULL")]
		public int ServiceKey
		{
			get
			{
				return this._ServiceKey;
			}
			set
			{
				if ((this._ServiceKey != value))
				{
					this.OnServiceKeyChanging(value);
					this.SendPropertyChanging();
					this._ServiceKey = value;
					this.SendPropertyChanged("ServiceKey");
					this.OnServiceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationKey", DbType="Int NOT NULL")]
		public int ApplicationKey
		{
			get
			{
				return this._ApplicationKey;
			}
			set
			{
				if ((this._ApplicationKey != value))
				{
					this.OnApplicationKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationKey = value;
					this.SendPropertyChanged("ApplicationKey");
					this.OnApplicationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this.OnActionNameChanging(value);
					this.SendPropertyChanging();
					this._ActionName = value;
					this.SendPropertyChanged("ActionName");
					this.OnActionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResponseTime
		{
			get
			{
				return this._ResponseTime;
			}
			set
			{
				if ((this._ResponseTime != value))
				{
					this.OnResponseTimeChanging(value);
					this.SendPropertyChanging();
					this._ResponseTime = value;
					this.SendPropertyChanged("ResponseTime");
					this.OnResponseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(32)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceType", DbType="VarChar(150)")]
		public string DeviceType
		{
			get
			{
				return this._DeviceType;
			}
			set
			{
				if ((this._DeviceType != value))
				{
					this.OnDeviceTypeChanging(value);
					this.SendPropertyChanging();
					this._DeviceType = value;
					this.SendPropertyChanged("DeviceType");
					this.OnDeviceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppVersion", DbType="VarChar(150)")]
		public string AppVersion
		{
			get
			{
				return this._AppVersion;
			}
			set
			{
				if ((this._AppVersion != value))
				{
					this.OnAppVersionChanging(value);
					this.SendPropertyChanging();
					this._AppVersion = value;
					this.SendPropertyChanged("AppVersion");
					this.OnAppVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialAppKey")]
	public partial class SpecialAppKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AppKey;
		
		private int _TypeId;
		
		private System.Nullable<System.DateTimeOffset> _TimeKey;
		
		private System.DateTimeOffset _Created;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAppKeyChanging(int value);
    partial void OnAppKeyChanged();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnTimeKeyChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnTimeKeyChanged();
    partial void OnCreatedChanging(System.DateTimeOffset value);
    partial void OnCreatedChanged();
    #endregion
		
		public SpecialAppKey()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppKey", DbType="Int NOT NULL")]
		public int AppKey
		{
			get
			{
				return this._AppKey;
			}
			set
			{
				if ((this._AppKey != value))
				{
					this.OnAppKeyChanging(value);
					this.SendPropertyChanging();
					this._AppKey = value;
					this.SendPropertyChanged("AppKey");
					this.OnAppKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeKey", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> TimeKey
		{
			get
			{
				return this._TimeKey;
			}
			set
			{
				if ((this._TimeKey != value))
				{
					this.OnTimeKeyChanging(value);
					this.SendPropertyChanging();
					this._TimeKey = value;
					this.SendPropertyChanged("TimeKey");
					this.OnTimeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaticSchedule")]
	public partial class StaticSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaticScheduleId;
		
		private string _ApplicationCode;
		
		private string _ActionName;
		
		private System.Nullable<System.DateTime> _RunTime;
		
		private int _DelayQuantity;
		
		private string _DelayType;
		
		private bool _Hidden;
		
		private System.Nullable<int> _ServiceId;
		
		private EntitySet<StaticScheduleParameter> _StaticScheduleParameters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaticScheduleIdChanging(int value);
    partial void OnStaticScheduleIdChanged();
    partial void OnApplicationCodeChanging(string value);
    partial void OnApplicationCodeChanged();
    partial void OnActionNameChanging(string value);
    partial void OnActionNameChanged();
    partial void OnRunTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRunTimeChanged();
    partial void OnDelayQuantityChanging(int value);
    partial void OnDelayQuantityChanged();
    partial void OnDelayTypeChanging(string value);
    partial void OnDelayTypeChanged();
    partial void OnHiddenChanging(bool value);
    partial void OnHiddenChanged();
    partial void OnServiceIdChanging(System.Nullable<int> value);
    partial void OnServiceIdChanged();
    #endregion
		
		public StaticSchedule()
		{
			this._StaticScheduleParameters = new EntitySet<StaticScheduleParameter>(new Action<StaticScheduleParameter>(this.attach_StaticScheduleParameters), new Action<StaticScheduleParameter>(this.detach_StaticScheduleParameters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticScheduleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaticScheduleId
		{
			get
			{
				return this._StaticScheduleId;
			}
			set
			{
				if ((this._StaticScheduleId != value))
				{
					this.OnStaticScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._StaticScheduleId = value;
					this.SendPropertyChanged("StaticScheduleId");
					this.OnStaticScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string ApplicationCode
		{
			get
			{
				return this._ApplicationCode;
			}
			set
			{
				if ((this._ApplicationCode != value))
				{
					this.OnApplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._ApplicationCode = value;
					this.SendPropertyChanged("ApplicationCode");
					this.OnApplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this.OnActionNameChanging(value);
					this.SendPropertyChanging();
					this._ActionName = value;
					this.SendPropertyChanged("ActionName");
					this.OnActionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RunTime
		{
			get
			{
				return this._RunTime;
			}
			set
			{
				if ((this._RunTime != value))
				{
					this.OnRunTimeChanging(value);
					this.SendPropertyChanging();
					this._RunTime = value;
					this.SendPropertyChanged("RunTime");
					this.OnRunTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelayQuantity", DbType="Int NOT NULL")]
		public int DelayQuantity
		{
			get
			{
				return this._DelayQuantity;
			}
			set
			{
				if ((this._DelayQuantity != value))
				{
					this.OnDelayQuantityChanging(value);
					this.SendPropertyChanging();
					this._DelayQuantity = value;
					this.SendPropertyChanged("DelayQuantity");
					this.OnDelayQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelayType", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string DelayType
		{
			get
			{
				return this._DelayType;
			}
			set
			{
				if ((this._DelayType != value))
				{
					this.OnDelayTypeChanging(value);
					this.SendPropertyChanging();
					this._DelayType = value;
					this.SendPropertyChanged("DelayType");
					this.OnDelayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="Bit NOT NULL")]
		public bool Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged("Hidden");
					this.OnHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="Int")]
		public System.Nullable<int> ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					this.OnServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceId = value;
					this.SendPropertyChanged("ServiceId");
					this.OnServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaticSchedule_StaticScheduleParameter", Storage="_StaticScheduleParameters", ThisKey="StaticScheduleId", OtherKey="StaticScheduleId")]
		public EntitySet<StaticScheduleParameter> StaticScheduleParameters
		{
			get
			{
				return this._StaticScheduleParameters;
			}
			set
			{
				this._StaticScheduleParameters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StaticScheduleParameters(StaticScheduleParameter entity)
		{
			this.SendPropertyChanging();
			entity.StaticSchedule = this;
		}
		
		private void detach_StaticScheduleParameters(StaticScheduleParameter entity)
		{
			this.SendPropertyChanging();
			entity.StaticSchedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rmh.AdminSetting")]
	public partial class AdminSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminSettingId;
		
		private string _FtpSite;
		
		private string _FtpUserName;
		
		private string _FtpPassword;
		
		private string _RwacVersion;
		
		private int _LastUpdatedSageCompanyId;
		
		private System.Nullable<System.DateTimeOffset> _LastCheckedSchedulesDate;
		
		private string _RwacBetaVersion;
		
		private int _DeployerMinuteInterval;
		
		private int _DeploySecondThrottle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminSettingIdChanging(int value);
    partial void OnAdminSettingIdChanged();
    partial void OnFtpSiteChanging(string value);
    partial void OnFtpSiteChanged();
    partial void OnFtpUserNameChanging(string value);
    partial void OnFtpUserNameChanged();
    partial void OnFtpPasswordChanging(string value);
    partial void OnFtpPasswordChanged();
    partial void OnRwacVersionChanging(string value);
    partial void OnRwacVersionChanged();
    partial void OnLastUpdatedSageCompanyIdChanging(int value);
    partial void OnLastUpdatedSageCompanyIdChanged();
    partial void OnLastCheckedSchedulesDateChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnLastCheckedSchedulesDateChanged();
    partial void OnRwacBetaVersionChanging(string value);
    partial void OnRwacBetaVersionChanged();
    partial void OnDeployerMinuteIntervalChanging(int value);
    partial void OnDeployerMinuteIntervalChanged();
    partial void OnDeploySecondThrottleChanging(int value);
    partial void OnDeploySecondThrottleChanged();
    #endregion
		
		public AdminSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminSettingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdminSettingId
		{
			get
			{
				return this._AdminSettingId;
			}
			set
			{
				if ((this._AdminSettingId != value))
				{
					this.OnAdminSettingIdChanging(value);
					this.SendPropertyChanging();
					this._AdminSettingId = value;
					this.SendPropertyChanged("AdminSettingId");
					this.OnAdminSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FtpSite", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string FtpSite
		{
			get
			{
				return this._FtpSite;
			}
			set
			{
				if ((this._FtpSite != value))
				{
					this.OnFtpSiteChanging(value);
					this.SendPropertyChanging();
					this._FtpSite = value;
					this.SendPropertyChanged("FtpSite");
					this.OnFtpSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FtpUserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string FtpUserName
		{
			get
			{
				return this._FtpUserName;
			}
			set
			{
				if ((this._FtpUserName != value))
				{
					this.OnFtpUserNameChanging(value);
					this.SendPropertyChanging();
					this._FtpUserName = value;
					this.SendPropertyChanged("FtpUserName");
					this.OnFtpUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FtpPassword", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string FtpPassword
		{
			get
			{
				return this._FtpPassword;
			}
			set
			{
				if ((this._FtpPassword != value))
				{
					this.OnFtpPasswordChanging(value);
					this.SendPropertyChanging();
					this._FtpPassword = value;
					this.SendPropertyChanged("FtpPassword");
					this.OnFtpPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RwacVersion", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string RwacVersion
		{
			get
			{
				return this._RwacVersion;
			}
			set
			{
				if ((this._RwacVersion != value))
				{
					this.OnRwacVersionChanging(value);
					this.SendPropertyChanging();
					this._RwacVersion = value;
					this.SendPropertyChanged("RwacVersion");
					this.OnRwacVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedSageCompanyId", DbType="Int NOT NULL")]
		public int LastUpdatedSageCompanyId
		{
			get
			{
				return this._LastUpdatedSageCompanyId;
			}
			set
			{
				if ((this._LastUpdatedSageCompanyId != value))
				{
					this.OnLastUpdatedSageCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedSageCompanyId = value;
					this.SendPropertyChanged("LastUpdatedSageCompanyId");
					this.OnLastUpdatedSageCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCheckedSchedulesDate", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> LastCheckedSchedulesDate
		{
			get
			{
				return this._LastCheckedSchedulesDate;
			}
			set
			{
				if ((this._LastCheckedSchedulesDate != value))
				{
					this.OnLastCheckedSchedulesDateChanging(value);
					this.SendPropertyChanging();
					this._LastCheckedSchedulesDate = value;
					this.SendPropertyChanged("LastCheckedSchedulesDate");
					this.OnLastCheckedSchedulesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RwacBetaVersion", DbType="NVarChar(10)")]
		public string RwacBetaVersion
		{
			get
			{
				return this._RwacBetaVersion;
			}
			set
			{
				if ((this._RwacBetaVersion != value))
				{
					this.OnRwacBetaVersionChanging(value);
					this.SendPropertyChanging();
					this._RwacBetaVersion = value;
					this.SendPropertyChanged("RwacBetaVersion");
					this.OnRwacBetaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeployerMinuteInterval", DbType="Int NOT NULL")]
		public int DeployerMinuteInterval
		{
			get
			{
				return this._DeployerMinuteInterval;
			}
			set
			{
				if ((this._DeployerMinuteInterval != value))
				{
					this.OnDeployerMinuteIntervalChanging(value);
					this.SendPropertyChanging();
					this._DeployerMinuteInterval = value;
					this.SendPropertyChanged("DeployerMinuteInterval");
					this.OnDeployerMinuteIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeploySecondThrottle", DbType="Int NOT NULL")]
		public int DeploySecondThrottle
		{
			get
			{
				return this._DeploySecondThrottle;
			}
			set
			{
				if ((this._DeploySecondThrottle != value))
				{
					this.OnDeploySecondThrottleChanging(value);
					this.SendPropertyChanging();
					this._DeploySecondThrottle = value;
					this.SendPropertyChanged("DeploySecondThrottle");
					this.OnDeploySecondThrottleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RwacDeploy")]
	public partial class RwacDeploy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RwacDeployId;
		
		private int _AppKey;
		
		private string _CurrentVersion;
		
		private string _DeployVersion;
		
		private int _Attempts;
		
		private System.Nullable<System.DateTimeOffset> _LastAttempt;
		
		private System.Nullable<System.DateTimeOffset> _UpdateConfirmed;
		
		private bool _IsBeta;
		
		private System.DateTimeOffset _Created;
		
		private System.DateTimeOffset _Updated;
		
		private string _CreatedBy;
		
		private string _LastError;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRwacDeployIdChanging(int value);
    partial void OnRwacDeployIdChanged();
    partial void OnAppKeyChanging(int value);
    partial void OnAppKeyChanged();
    partial void OnCurrentVersionChanging(string value);
    partial void OnCurrentVersionChanged();
    partial void OnDeployVersionChanging(string value);
    partial void OnDeployVersionChanged();
    partial void OnAttemptsChanging(int value);
    partial void OnAttemptsChanged();
    partial void OnLastAttemptChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnLastAttemptChanged();
    partial void OnUpdateConfirmedChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnUpdateConfirmedChanged();
    partial void OnIsBetaChanging(bool value);
    partial void OnIsBetaChanged();
    partial void OnCreatedChanging(System.DateTimeOffset value);
    partial void OnCreatedChanged();
    partial void OnUpdatedChanging(System.DateTimeOffset value);
    partial void OnUpdatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnLastErrorChanging(string value);
    partial void OnLastErrorChanged();
    #endregion
		
		public RwacDeploy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RwacDeployId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RwacDeployId
		{
			get
			{
				return this._RwacDeployId;
			}
			set
			{
				if ((this._RwacDeployId != value))
				{
					this.OnRwacDeployIdChanging(value);
					this.SendPropertyChanging();
					this._RwacDeployId = value;
					this.SendPropertyChanged("RwacDeployId");
					this.OnRwacDeployIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppKey", DbType="Int NOT NULL")]
		public int AppKey
		{
			get
			{
				return this._AppKey;
			}
			set
			{
				if ((this._AppKey != value))
				{
					this.OnAppKeyChanging(value);
					this.SendPropertyChanging();
					this._AppKey = value;
					this.SendPropertyChanged("AppKey");
					this.OnAppKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVersion", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CurrentVersion
		{
			get
			{
				return this._CurrentVersion;
			}
			set
			{
				if ((this._CurrentVersion != value))
				{
					this.OnCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._CurrentVersion = value;
					this.SendPropertyChanged("CurrentVersion");
					this.OnCurrentVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeployVersion", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DeployVersion
		{
			get
			{
				return this._DeployVersion;
			}
			set
			{
				if ((this._DeployVersion != value))
				{
					this.OnDeployVersionChanging(value);
					this.SendPropertyChanging();
					this._DeployVersion = value;
					this.SendPropertyChanged("DeployVersion");
					this.OnDeployVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attempts", DbType="Int NOT NULL")]
		public int Attempts
		{
			get
			{
				return this._Attempts;
			}
			set
			{
				if ((this._Attempts != value))
				{
					this.OnAttemptsChanging(value);
					this.SendPropertyChanging();
					this._Attempts = value;
					this.SendPropertyChanged("Attempts");
					this.OnAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAttempt", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> LastAttempt
		{
			get
			{
				return this._LastAttempt;
			}
			set
			{
				if ((this._LastAttempt != value))
				{
					this.OnLastAttemptChanging(value);
					this.SendPropertyChanging();
					this._LastAttempt = value;
					this.SendPropertyChanged("LastAttempt");
					this.OnLastAttemptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateConfirmed", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> UpdateConfirmed
		{
			get
			{
				return this._UpdateConfirmed;
			}
			set
			{
				if ((this._UpdateConfirmed != value))
				{
					this.OnUpdateConfirmedChanging(value);
					this.SendPropertyChanging();
					this._UpdateConfirmed = value;
					this.SendPropertyChanged("UpdateConfirmed");
					this.OnUpdateConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBeta", DbType="Bit NOT NULL")]
		public bool IsBeta
		{
			get
			{
				return this._IsBeta;
			}
			set
			{
				if ((this._IsBeta != value))
				{
					this.OnIsBetaChanging(value);
					this.SendPropertyChanging();
					this._IsBeta = value;
					this.SendPropertyChanged("IsBeta");
					this.OnIsBetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastError", DbType="NVarChar(1024)")]
		public string LastError
		{
			get
			{
				return this._LastError;
			}
			set
			{
				if ((this._LastError != value))
				{
					this.OnLastErrorChanging(value);
					this.SendPropertyChanging();
					this._LastError = value;
					this.SendPropertyChanged("LastError");
					this.OnLastErrorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rmh.AgencyInfo")]
	public partial class AgencyInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Value;
		
		private System.DateTimeOffset _Created;
		
		private System.Nullable<System.DateTimeOffset> _Updated;
		
		private int _GroupId;
		
		private int _AgencyInfoMetaId;
		
		private EntityRef<AgencyInfoMeta> _AgencyInfoMeta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnCreatedChanging(System.DateTimeOffset value);
    partial void OnCreatedChanged();
    partial void OnUpdatedChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnUpdatedChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnAgencyInfoMetaIdChanging(int value);
    partial void OnAgencyInfoMetaIdChanged();
    #endregion
		
		public AgencyInfo()
		{
			this._AgencyInfoMeta = default(EntityRef<AgencyInfoMeta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyInfoMetaId", DbType="Int NOT NULL")]
		public int AgencyInfoMetaId
		{
			get
			{
				return this._AgencyInfoMetaId;
			}
			set
			{
				if ((this._AgencyInfoMetaId != value))
				{
					if (this._AgencyInfoMeta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyInfoMetaIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyInfoMetaId = value;
					this.SendPropertyChanged("AgencyInfoMetaId");
					this.OnAgencyInfoMetaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AgencyInfoMeta_AgencyInfo", Storage="_AgencyInfoMeta", ThisKey="AgencyInfoMetaId", OtherKey="AgencyInfoMetaId", IsForeignKey=true)]
		public AgencyInfoMeta AgencyInfoMeta
		{
			get
			{
				return this._AgencyInfoMeta.Entity;
			}
			set
			{
				AgencyInfoMeta previousValue = this._AgencyInfoMeta.Entity;
				if (((previousValue != value) 
							|| (this._AgencyInfoMeta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AgencyInfoMeta.Entity = null;
						previousValue.AgencyInfos.Remove(this);
					}
					this._AgencyInfoMeta.Entity = value;
					if ((value != null))
					{
						value.AgencyInfos.Add(this);
						this._AgencyInfoMetaId = value.AgencyInfoMetaId;
					}
					else
					{
						this._AgencyInfoMetaId = default(int);
					}
					this.SendPropertyChanged("AgencyInfoMeta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rmh.AgencyInfoMeta")]
	public partial class AgencyInfoMeta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AgencyInfoMetaId;
		
		private string _ClientCode;
		
		private string _SerialNumber;
		
		private string _Name;
		
		private string _SageName;
		
		private System.DateTimeOffset _Created;
		
		private System.DateTimeOffset _Updated;

		private string _LastSource;
		
		private EntitySet<AgencyInfo> _AgencyInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAgencyInfoMetaIdChanging(int value);
    partial void OnAgencyInfoMetaIdChanged();
    partial void OnClientCodeChanging(string value);
    partial void OnClientCodeChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSageNameChanging(string value);
    partial void OnSageNameChanged();
    partial void OnCreatedChanging(System.DateTimeOffset value);
    partial void OnCreatedChanged();
    partial void OnUpdatedChanging(System.DateTimeOffset value);
    partial void OnUpdatedChanged();
    partial void OnLastSourceChanging(string value);
    partial void OnLastSourceChanged();
    #endregion
		
		public AgencyInfoMeta()
		{
			this._AgencyInfos = new EntitySet<AgencyInfo>(new Action<AgencyInfo>(this.attach_AgencyInfos), new Action<AgencyInfo>(this.detach_AgencyInfos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyInfoMetaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AgencyInfoMetaId
		{
			get
			{
				return this._AgencyInfoMetaId;
			}
			set
			{
				if ((this._AgencyInfoMetaId != value))
				{
					this.OnAgencyInfoMetaIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyInfoMetaId = value;
					this.SendPropertyChanged("AgencyInfoMetaId");
					this.OnAgencyInfoMetaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this.OnClientCodeChanging(value);
					this.SendPropertyChanging();
					this._ClientCode = value;
					this.SendPropertyChanged("ClientCode");
					this.OnClientCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="VarChar(20)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SageName", DbType="NVarChar(64)")]
		public string SageName
		{
			get
			{
				return this._SageName;
			}
			set
			{
				if ((this._SageName != value))
				{
					this.OnSageNameChanging(value);
					this.SendPropertyChanging();
					this._SageName = value;
					this.SendPropertyChanged("SageName");
					this.OnSageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastSource", DbType = "VarChar(4)")]
        public string LastSource
        {
            get
            {
                return this._LastSource;
            }
            set
            {
                if ((this._LastSource != value))
                {
                    this.OnLastSourceChanging(value);
                    this.SendPropertyChanging();
                    this._LastSource = value;
                    this.SendPropertyChanged("LastSource");
                    this.OnLastSourceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name="AgencyInfoMeta_AgencyInfo", Storage="_AgencyInfos", ThisKey="AgencyInfoMetaId", OtherKey="AgencyInfoMetaId")]
		public EntitySet<AgencyInfo> AgencyInfos
		{
			get
			{
				return this._AgencyInfos;
			}
			set
			{
				this._AgencyInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AgencyInfos(AgencyInfo entity)
		{
			this.SendPropertyChanging();
			entity.AgencyInfoMeta = this;
		}
		
		private void detach_AgencyInfos(AgencyInfo entity)
		{
			this.SendPropertyChanging();
			entity.AgencyInfoMeta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rmh.AgencyApplication")]
	public partial class AgencyApplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AgencyApplicationID;
		
		private System.Nullable<int> _AgencyAccessID;
		
		private string _ApplicationCode;
		
		private System.Nullable<int> _ApplicationKey;
		
		private string _SerialNumber;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Listened;
		
		private int _Version;
		
		private bool _Rockend;
		
		private int _RWACVersion;
		
		private System.DateTimeOffset _Created;
		
		private string _AmhMachine;
		
		private string _AppMachine;
		
		private string _AltSageClientCode;
		
		private int _AppmhVersion;
		
		private string _WordVersion;
		
		private System.Nullable<bool> _Word64;
		
		private string _ExcelVersion;
		
		private System.Nullable<bool> _Excel64;
		
		private string _ReporterVersion;
		
		private System.Nullable<System.DateTimeOffset> _MachineNow;
		
		private string _Timezone;
		
		private string _TimeOffset;
		
		private System.DateTimeOffset _LastUpdated;
		
		private EntitySet<Activation> _Activations;
		
		private EntitySet<ServiceAgencyApplication> _ServiceAgencyApplications;
		
		private EntityRef<AgencyAccess> _AgencyAccess;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAgencyApplicationIDChanging(int value);
    partial void OnAgencyApplicationIDChanged();
    partial void OnAgencyAccessIDChanging(System.Nullable<int> value);
    partial void OnAgencyAccessIDChanged();
    partial void OnApplicationCodeChanging(string value);
    partial void OnApplicationCodeChanged();
    partial void OnApplicationKeyChanging(System.Nullable<int> value);
    partial void OnApplicationKeyChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnListenedChanging(System.Nullable<System.DateTime> value);
    partial void OnListenedChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnRockendChanging(bool value);
    partial void OnRockendChanged();
    partial void OnRWACVersionChanging(int value);
    partial void OnRWACVersionChanged();
    partial void OnCreatedChanging(System.DateTimeOffset value);
    partial void OnCreatedChanged();
    partial void OnAmhMachineChanging(string value);
    partial void OnAmhMachineChanged();
    partial void OnAppMachineChanging(string value);
    partial void OnAppMachineChanged();
    partial void OnAltSageClientCodeChanging(string value);
    partial void OnAltSageClientCodeChanged();
    partial void OnAppmhVersionChanging(int value);
    partial void OnAppmhVersionChanged();
    partial void OnWordVersionChanging(string value);
    partial void OnWordVersionChanged();
    partial void OnWord64Changing(System.Nullable<bool> value);
    partial void OnWord64Changed();
    partial void OnExcelVersionChanging(string value);
    partial void OnExcelVersionChanged();
    partial void OnExcel64Changing(System.Nullable<bool> value);
    partial void OnExcel64Changed();
    partial void OnReporterVersionChanging(string value);
    partial void OnReporterVersionChanged();
    partial void OnMachineNowChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnMachineNowChanged();
    partial void OnTimezoneChanging(string value);
    partial void OnTimezoneChanged();
    partial void OnTimeOffsetChanging(string value);
    partial void OnTimeOffsetChanged();
    partial void OnLastUpdatedChanging(System.DateTimeOffset value);
    partial void OnLastUpdatedChanged();
    #endregion
		
		public AgencyApplication()
		{
			this._Activations = new EntitySet<Activation>(new Action<Activation>(this.attach_Activations), new Action<Activation>(this.detach_Activations));
			this._ServiceAgencyApplications = new EntitySet<ServiceAgencyApplication>(new Action<ServiceAgencyApplication>(this.attach_ServiceAgencyApplications), new Action<ServiceAgencyApplication>(this.detach_ServiceAgencyApplications));
			this._AgencyAccess = default(EntityRef<AgencyAccess>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyApplicationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AgencyApplicationID
		{
			get
			{
				return this._AgencyApplicationID;
			}
			set
			{
				if ((this._AgencyApplicationID != value))
				{
					this.OnAgencyApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._AgencyApplicationID = value;
					this.SendPropertyChanged("AgencyApplicationID");
					this.OnAgencyApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyAccessID", DbType="Int")]
		public System.Nullable<int> AgencyAccessID
		{
			get
			{
				return this._AgencyAccessID;
			}
			set
			{
				if ((this._AgencyAccessID != value))
				{
					if (this._AgencyAccess.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyAccessIDChanging(value);
					this.SendPropertyChanging();
					this._AgencyAccessID = value;
					this.SendPropertyChanged("AgencyAccessID");
					this.OnAgencyAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCode", DbType="NVarChar(2)")]
		public string ApplicationCode
		{
			get
			{
				return this._ApplicationCode;
			}
			set
			{
				if ((this._ApplicationCode != value))
				{
					this.OnApplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._ApplicationCode = value;
					this.SendPropertyChanged("ApplicationCode");
					this.OnApplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationKey", DbType="Int")]
		public System.Nullable<int> ApplicationKey
		{
			get
			{
				return this._ApplicationKey;
			}
			set
			{
				if ((this._ApplicationKey != value))
				{
					this.OnApplicationKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationKey = value;
					this.SendPropertyChanged("ApplicationKey");
					this.OnApplicationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(20)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Listened", DbType="DateTime")]
		public System.Nullable<System.DateTime> Listened
		{
			get
			{
				return this._Listened;
			}
			set
			{
				if ((this._Listened != value))
				{
					this.OnListenedChanging(value);
					this.SendPropertyChanging();
					this._Listened = value;
					this.SendPropertyChanged("Listened");
					this.OnListenedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rockend", DbType="Bit NOT NULL")]
		public bool Rockend
		{
			get
			{
				return this._Rockend;
			}
			set
			{
				if ((this._Rockend != value))
				{
					this.OnRockendChanging(value);
					this.SendPropertyChanging();
					this._Rockend = value;
					this.SendPropertyChanged("Rockend");
					this.OnRockendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RWACVersion", DbType="Int NOT NULL")]
		public int RWACVersion
		{
			get
			{
				return this._RWACVersion;
			}
			set
			{
				if ((this._RWACVersion != value))
				{
					this.OnRWACVersionChanging(value);
					this.SendPropertyChanging();
					this._RWACVersion = value;
					this.SendPropertyChanged("RWACVersion");
					this.OnRWACVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmhMachine", DbType="NVarChar(50)")]
		public string AmhMachine
		{
			get
			{
				return this._AmhMachine;
			}
			set
			{
				if ((this._AmhMachine != value))
				{
					this.OnAmhMachineChanging(value);
					this.SendPropertyChanging();
					this._AmhMachine = value;
					this.SendPropertyChanged("AmhMachine");
					this.OnAmhMachineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppMachine", DbType="NVarChar(50)")]
		public string AppMachine
		{
			get
			{
				return this._AppMachine;
			}
			set
			{
				if ((this._AppMachine != value))
				{
					this.OnAppMachineChanging(value);
					this.SendPropertyChanging();
					this._AppMachine = value;
					this.SendPropertyChanged("AppMachine");
					this.OnAppMachineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltSageClientCode", DbType="VarChar(12)")]
		public string AltSageClientCode
		{
			get
			{
				return this._AltSageClientCode;
			}
			set
			{
				if ((this._AltSageClientCode != value))
				{
					this.OnAltSageClientCodeChanging(value);
					this.SendPropertyChanging();
					this._AltSageClientCode = value;
					this.SendPropertyChanged("AltSageClientCode");
					this.OnAltSageClientCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppmhVersion", DbType="Int NOT NULL")]
		public int AppmhVersion
		{
			get
			{
				return this._AppmhVersion;
			}
			set
			{
				if ((this._AppmhVersion != value))
				{
					this.OnAppmhVersionChanging(value);
					this.SendPropertyChanging();
					this._AppmhVersion = value;
					this.SendPropertyChanged("AppmhVersion");
					this.OnAppmhVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WordVersion", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string WordVersion
		{
			get
			{
				return this._WordVersion;
			}
			set
			{
				if ((this._WordVersion != value))
				{
					this.OnWordVersionChanging(value);
					this.SendPropertyChanging();
					this._WordVersion = value;
					this.SendPropertyChanged("WordVersion");
					this.OnWordVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Word64", DbType="Bit")]
		public System.Nullable<bool> Word64
		{
			get
			{
				return this._Word64;
			}
			set
			{
				if ((this._Word64 != value))
				{
					this.OnWord64Changing(value);
					this.SendPropertyChanging();
					this._Word64 = value;
					this.SendPropertyChanged("Word64");
					this.OnWord64Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcelVersion", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ExcelVersion
		{
			get
			{
				return this._ExcelVersion;
			}
			set
			{
				if ((this._ExcelVersion != value))
				{
					this.OnExcelVersionChanging(value);
					this.SendPropertyChanging();
					this._ExcelVersion = value;
					this.SendPropertyChanged("ExcelVersion");
					this.OnExcelVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Excel64", DbType="Bit")]
		public System.Nullable<bool> Excel64
		{
			get
			{
				return this._Excel64;
			}
			set
			{
				if ((this._Excel64 != value))
				{
					this.OnExcel64Changing(value);
					this.SendPropertyChanging();
					this._Excel64 = value;
					this.SendPropertyChanged("Excel64");
					this.OnExcel64Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReporterVersion", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ReporterVersion
		{
			get
			{
				return this._ReporterVersion;
			}
			set
			{
				if ((this._ReporterVersion != value))
				{
					this.OnReporterVersionChanging(value);
					this.SendPropertyChanging();
					this._ReporterVersion = value;
					this.SendPropertyChanged("ReporterVersion");
					this.OnReporterVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineNow", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> MachineNow
		{
			get
			{
				return this._MachineNow;
			}
			set
			{
				if ((this._MachineNow != value))
				{
					this.OnMachineNowChanging(value);
					this.SendPropertyChanging();
					this._MachineNow = value;
					this.SendPropertyChanged("MachineNow");
					this.OnMachineNowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timezone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Timezone
		{
			get
			{
				return this._Timezone;
			}
			set
			{
				if ((this._Timezone != value))
				{
					this.OnTimezoneChanging(value);
					this.SendPropertyChanging();
					this._Timezone = value;
					this.SendPropertyChanged("Timezone");
					this.OnTimezoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOffset", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string TimeOffset
		{
			get
			{
				return this._TimeOffset;
			}
			set
			{
				if ((this._TimeOffset != value))
				{
					this.OnTimeOffsetChanging(value);
					this.SendPropertyChanging();
					this._TimeOffset = value;
					this.SendPropertyChanged("TimeOffset");
					this.OnTimeOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AgencyApplication_Activation", Storage="_Activations", ThisKey="AgencyApplicationID", OtherKey="AgencyApplicationID")]
		public EntitySet<Activation> Activations
		{
			get
			{
				return this._Activations;
			}
			set
			{
				this._Activations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AgencyApplication_ServiceAgencyApplication", Storage="_ServiceAgencyApplications", ThisKey="AgencyApplicationID", OtherKey="AgencyApplicationID")]
		public EntitySet<ServiceAgencyApplication> ServiceAgencyApplications
		{
			get
			{
				return this._ServiceAgencyApplications;
			}
			set
			{
				this._ServiceAgencyApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AgencyAccess_AgencyApplication", Storage="_AgencyAccess", ThisKey="AgencyAccessID", OtherKey="AgencyAccessID", IsForeignKey=true)]
		public AgencyAccess AgencyAccess
		{
			get
			{
				return this._AgencyAccess.Entity;
			}
			set
			{
				AgencyAccess previousValue = this._AgencyAccess.Entity;
				if (((previousValue != value) 
							|| (this._AgencyAccess.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AgencyAccess.Entity = null;
						previousValue.AgencyApplications.Remove(this);
					}
					this._AgencyAccess.Entity = value;
					if ((value != null))
					{
						value.AgencyApplications.Add(this);
						this._AgencyAccessID = value.AgencyAccessID;
					}
					else
					{
						this._AgencyAccessID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AgencyAccess");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activations(Activation entity)
		{
			this.SendPropertyChanging();
			entity.AgencyApplication = this;
		}
		
		private void detach_Activations(Activation entity)
		{
			this.SendPropertyChanging();
			entity.AgencyApplication = null;
		}
		
		private void attach_ServiceAgencyApplications(ServiceAgencyApplication entity)
		{
			this.SendPropertyChanging();
			entity.AgencyApplication = this;
		}
		
		private void detach_ServiceAgencyApplications(ServiceAgencyApplication entity)
		{
			this.SendPropertyChanging();
			entity.AgencyApplication = null;
		}
	}

	public partial class GetAppKeysWithUpdatedScheduleResult
	{
		
		private int _ApplicationKey;
		
		public GetAppKeysWithUpdatedScheduleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationKey", DbType="Int NOT NULL")]
		public int ApplicationKey
		{
			get
			{
				return this._ApplicationKey;
			}
			set
			{
				if ((this._ApplicationKey != value))
				{
					this._ApplicationKey = value;
				}
			}
		}
	}
	
	public partial class CheckAgencyGUIDAndSetRWACVersionResult
	{
		
		private System.Nullable<int> _ApplicationKey;
		
		private System.Nullable<System.Guid> _AgencyGUID;
		
		public CheckAgencyGUIDAndSetRWACVersionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationKey", DbType="Int")]
		public System.Nullable<int> ApplicationKey
		{
			get
			{
				return this._ApplicationKey;
			}
			set
			{
				if ((this._ApplicationKey != value))
				{
					this._ApplicationKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AgencyGUID
		{
			get
			{
				return this._AgencyGUID;
			}
			set
			{
				if ((this._AgencyGUID != value))
				{
					this._AgencyGUID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
