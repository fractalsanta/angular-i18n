(function(exports){

    var KB = 1024;
    var MB = 1000*1024;

    //keepAlive Boolean Keep sockets around in a pool to be used by other requests in the future. Default = false
    //keepAliveMsecs Integer When using HTTP KeepAlive, how often to send TCP KeepAlive packets over sockets being kept alive. Default = 1000. Only relevant if keepAlive is set to true.
    //maxSockets Number Maximum number of sockets to allow per host. Default = Infinity.
    //maxFreeSockets Number Maximum number of sockets to leave open in a free state. Only relevant if keepAlive is set to true. Default = 256.


    //DIAL-UP ~ 1(Kbps)
    exports.weakest = {
        timeout     : 60*1000,
        concurrent  : 1,
        batch_size  : 1,
        batch_factor: 1,
        agent       : {
            keepAlive     : true,
            keepAliveMsecs: 2*1000,
            maxSockets    : 4,
            maxFreeSockets: 10
        }
    };

    //DSL ~ 100(Kbps)
    exports.weaker = {
        timeout     : 60*1000,
        concurrent  : 2,
        batch_size  : 2,
        batch_factor: 1,
        agent       : {
            keepAlive     : true,
            keepAliveMsecs: 2*1000,
            maxSockets    : 4,
            maxFreeSockets: 10
        }
    };

    //Standard ~ 512(Kbps)
    exports.weak = {
        timeout     : 60*1000,
        concurrent  : 4,
        batch_size  : 100,
        batch_factor: 1,
        agent       : {
            keepAlive  : true,
            keepAliveMsecs: 2000,
            maxSockets    : 8,
            maxFreeSockets: 16
        }
    };

    //Standard ~ 1(Mbps)
    exports.standard = {
        timeout     : 60*1000,
        concurrent  : 8,
        batch_size  : 100,
        batch_factor: 1.2,
        agent       : {
            keepAlive     : true,
            keepAliveMsecs: 2000,
            maxSockets    : 8,
            maxFreeSockets: 24
        }
    };

    //Strong ~ 10(Mbps)
    exports.strong = {
        timeout     : 60*1000,
        concurrent  : 10,
        batch_size  : 100,
        batch_factor: 1.5,
        agent       : {
            keepAlive  : true,
            keepAliveMsecs: 1000,
            maxSockets    : 10,
            maxFreeSockets: 128
        }
    };

    //Strong ~ 100(Mbps)
    exports.stronger = {
        timeout     : 60*1000,
        concurrent  : 16,
        batch_size  : 100,
        batch_factor: 2,
        agent       : {
            keepAlive     : true,
            keepAliveMsecs: 1000,
            maxSockets    : 256,
            maxFreeSockets: 256
        }
    };

    //Strong ~ 1(Gbps)
    exports.strongest = {
        timeout     : 60*1000,
        concurrent  : 24,
        batch_size  : 200,
        batch_factor: 4,
        agent       : {
            keepAlive  : true,
            keepAliveMsecs: 4000,
            maxSockets : 1024,
            maxFreeSockets: 256
        }
    };

    //Job-engine ~ 1(Gbps)
    exports.jobengine = {
        timeout     : 60*1000,
        concurrent  : 4,
        batch_size  : 200,
        batch_factor: 4,
        agent       : {
            keepAlive  : true,
            keepAliveMsecs: 4000,
            maxSockets : 1024,
            maxFreeSockets: 256
        }
    };

})(module.exports);
